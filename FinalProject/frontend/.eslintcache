[{"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/index.js":"1","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/App.js":"2","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reportWebVitals.js":"3","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/store.js":"4","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Footer.js":"5","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ProductScreen.js":"6","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/HomeScreen.js":"7","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/CartScreen.js":"8","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/LoginScreen.js":"9","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/RegisterScreen.js":"10","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ProfileScreen.js":"11","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/OrderScreen.js":"12","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ShippingScreen.js":"13","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/PlaceOrderScreen.js":"14","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/PaymentScreen.js":"15","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/productReducers.js":"16","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/cartReducers.js":"17","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/userReducers.js":"18","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/orderReducers.js":"19","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Header.js":"20","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Rating.js":"21","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Loader.js":"22","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Message.js":"23","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/FormContainer.js":"24","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Product.js":"25","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/CheckoutSteps.js":"26","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/orderActions.js":"27","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/cartActions.js":"28","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/orderConstants.js":"29","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/cartConstants.js":"30","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/productActions.js":"31","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/userActions.js":"32","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/userConstants.js":"33","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/productConstants.js":"34","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/MyOrdersScreen.js":"35","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/UserListScreen.js":"36"},{"size":385,"mtime":1639431124587,"results":"37","hashOfConfig":"38"},{"size":1862,"mtime":1639667846457,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1639431124587,"results":"40","hashOfConfig":"38"},{"size":1932,"mtime":1639669107437,"results":"41","hashOfConfig":"38"},{"size":366,"mtime":1639431124583,"results":"42","hashOfConfig":"38"},{"size":4064,"mtime":1639431124587,"results":"43","hashOfConfig":"38"},{"size":1025,"mtime":1639431124587,"results":"44","hashOfConfig":"38"},{"size":3529,"mtime":1639613775133,"results":"45","hashOfConfig":"38"},{"size":2303,"mtime":1639613775133,"results":"46","hashOfConfig":"38"},{"size":3240,"mtime":1639613775133,"results":"47","hashOfConfig":"38"},{"size":3631,"mtime":1639660026888,"results":"48","hashOfConfig":"38"},{"size":4826,"mtime":1639618185644,"results":"49","hashOfConfig":"38"},{"size":3223,"mtime":1639613775133,"results":"50","hashOfConfig":"38"},{"size":4911,"mtime":1639617701086,"results":"51","hashOfConfig":"38"},{"size":1569,"mtime":1639613775133,"results":"52","hashOfConfig":"38"},{"size":998,"mtime":1639431124587,"results":"53","hashOfConfig":"38"},{"size":1252,"mtime":1639588258125,"results":"54","hashOfConfig":"38"},{"size":3010,"mtime":1639667846457,"results":"55","hashOfConfig":"38"},{"size":1873,"mtime":1639656824599,"results":"56","hashOfConfig":"38"},{"size":2793,"mtime":1639667846457,"results":"57","hashOfConfig":"38"},{"size":1493,"mtime":1639576278120,"results":"58","hashOfConfig":"38"},{"size":377,"mtime":1639431124583,"results":"59","hashOfConfig":"38"},{"size":190,"mtime":1639431124587,"results":"60","hashOfConfig":"38"},{"size":338,"mtime":1639503561666,"results":"61","hashOfConfig":"38"},{"size":869,"mtime":1639431124587,"results":"62","hashOfConfig":"38"},{"size":1592,"mtime":1639582435961,"results":"63","hashOfConfig":"38"},{"size":2691,"mtime":1639658116314,"results":"64","hashOfConfig":"38"},{"size":1200,"mtime":1639588530798,"results":"65","hashOfConfig":"38"},{"size":913,"mtime":1639656543111,"results":"66","hashOfConfig":"38"},{"size":293,"mtime":1639588243560,"results":"67","hashOfConfig":"38"},{"size":1137,"mtime":1639500369083,"results":"68","hashOfConfig":"38"},{"size":5448,"mtime":1639667846457,"results":"69","hashOfConfig":"38"},{"size":1280,"mtime":1639668507601,"results":"70","hashOfConfig":"38"},{"size":363,"mtime":1639431124587,"results":"71","hashOfConfig":"38"},{"size":2376,"mtime":1639660335094,"results":"72","hashOfConfig":"38"},{"size":2702,"mtime":1639669585781,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1cfv5m8",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/index.js",[],["155","156"],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/App.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reportWebVitals.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/store.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Footer.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ProductScreen.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/HomeScreen.js",["157","158"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listProducts } from \"../actions/productActions\";\n\nfunction HomeScreen() {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products } = productList;\n  useEffect(() => {\n    dispatch(listProducts());\n  }, []);\n  return (\n    <div>\n      <h1>latest products</h1>\n      {loading ? (\n        <Loader></Loader>\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/CartScreen.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/LoginScreen.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/RegisterScreen.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ProfileScreen.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/OrderScreen.js",["159"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails } from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nfunction OrderScreen({ match }) {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((sum, item) => sum + item.price * item.quantity, 0)\n      .toFixed(2);\n  }\n\n  //   if (!cart.paymentMethod) {\n  //     history.push(\"/payment\");\n  //   }\n\n  useEffect(() => {\n    if (!order || order._id !== Number(orderId)) {\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [dispatch, order, orderId]);\n\n  if (loading) {\n    return <Loader />;\n  } else if (error) {\n    return <Message variant=\"danger\">{error}</Message>;\n  } else {\n    return (\n      <div>\n        <Message variant=\"success\">\n          <p>order is placed &#10004; </p>\n        </Message>\n        <Row>\n          <Col md={8}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping Address</h2>\n                  <p>\n                    <strong>Name:</strong>\n                    {order.user.name}\n                  </p>\n                  <p>\n                    {order.shippingAddress.address} ,{\" \"}\n                    {order.shippingAddress.city},{\" \"}\n                    {order.shippingAddress.country} , Egypt.\n                  </p>\n                  {order.isDeliverd ? (\n                    <Message variant=\"success\">\n                      Deliverd at {order.deliverdAt}\n                    </Message>\n                  ) : (\n                    <Message variant=\"warning\">Not Deliverd</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>Method: {order.payment_method}</p>\n\n                  {order.is_paid ? (\n                    <Message variant=\"success\">Paid at {order.paid_at}</Message>\n                  ) : (\n                    <Message variant=\"warning\">Not Paid</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message variant=\"info\">Your order Is Empty</Message>\n                  ) : (\n                    <ListGroup variant=\"flush\">\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col>\n                              {item.quantity} X {item.price} L.E ={\" \"}\n                              {(item.quantity * item.price).toFixed(2)} L.E\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Summary</h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Items:</Col>\n                  <Col>{order.itemsPrice} L.E</Col>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Shipping:</Col>\n                  <Col>{order.shipping_price} L.E</Col>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Total:</Col>\n                  <Col>{order.total_price} L.E</Col>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default OrderScreen;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/ShippingScreen.js",["160"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        console.log(\"submlt\")\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className=\"w-100\">\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/PlaceOrderScreen.js",["161","162"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nfunction PlaceOrderScreen({ history }) {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((sum, item) => sum + item.price * item.qty, 0)\n    .toFixed(2);\n\n  if (cart.itemsPrice > 500) {\n    (cart.shippingPrice = 0).toFixed(2);\n  } else {\n    (cart.shippingPrice = 50).toFixed(2);\n  }\n  cart.totalPrice = (\n    Number(cart.shippingPrice) + Number(cart.itemsPrice)\n  ).toFixed(2);\n\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [success, history]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Row>\n        <Col md={8}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Shipping Address</h2>\n                <p>\n                  {cart.shippingAddress.address} , {cart.shippingAddress.city},{\" \"}\n                  {cart.shippingAddress.country} , Egypt.\n                </p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>Method: {cart.paymentMethod}</p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Items</h2>\n                {cart.cartItems.length === 0 ? (\n                  <Message variant=\"info\">Your Cart Is Empty</Message>\n                ) : (\n                  <ListGroup variant=\"flush\">\n                    {cart.cartItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col>\n                            {item.qty} X {item.price} L.E ={\" \"}\n                            {(item.qty * item.price).toFixed(2)} L.E\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>Items:</Col>\n                <Col>{cart.itemsPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>Shipping:</Col>\n                <Col>{cart.shippingPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>Total:</Col>\n                <Col>{cart.totalPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block w-100\"\n                  disapled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Place Ordrer\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/PaymentScreen.js",["163"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState(\"Cash On Delievery\");\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"Cash on Delievery\"\n              id=\"cod\" // cod is cash on delievery\n              name=\"paymentMethod\"\n              checked\n              onChange={(event) => {\n                setPaymentMethod(event.target.value);\n              }}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <br></br>\n        <Button type=\"submit\" variant=\"primary\" className=\"w-100\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/productReducers.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/cartReducers.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/userReducers.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/reducers/orderReducers.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Header.js",["164"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport logo from '../logo.png';\n\nfunction Header() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand className=\"brand\">\n              <img src={logo} alt=\"Logo\" height={'60px'} />\n              <h3>MidNight</h3>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            className=\"justify-content-end\"\n          >\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/myorders\">\n                    <NavDropdown.Item>My Orders</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenue'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Rating.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Loader.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Message.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/FormContainer.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/Product.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/components/CheckoutSteps.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/orderActions.js",["165"],"import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_LIST_MY_ORDERS_SUCCESS,\n  ORDER_LIST_MY_ORDERS_REQUEST,\n  ORDER_LIST_MY_ORDERS_FAIL,\n  ORDER_LIST_MY_ORDERS_RESET,\n} from \"../constants/orderConstants\";\n\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_ORDERS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/cartActions.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/orderConstants.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/cartConstants.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/productActions.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/actions/userActions.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/userConstants.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/constants/productConstants.js",[],"/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/MyOrdersScreen.js",["166"],"import { listMyOrders } from \"../actions/orderActions\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nfunction MyOrdersScreen({ history }) {\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || userInfo._id !== user._id) {\n        dispatch(listMyOrders());\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  return (\n    <Row md={9}>\n      <h2>My Orders</h2>\n      {loadingOrders ? (\n        <Loader />\n      ) : errorOrders ? (\n        <Message variant=\"danger\">{errorOrders}</Message>\n      ) : (\n        <Table striped responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Date</th>\n              <th>Total</th>\n              <th>Paid</th>\n              <th>Delivered</th>\n              <th>order details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.created_at.substring(0, 10)}</td>\n                <td>{order.total_price} L.E</td>\n                <td>\n                  {order.is_paid ? (\n                    order.paid_at\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td></td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button className=\" btn-sm \"> Details </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n      <Col></Col>\n    </Row>\n  );\n}\n\nexport default MyOrdersScreen;\n","/home/abdelrahman/Desktop/ecommerce_project/FinalProject/frontend/src/screens/UserListScreen.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":15,"column":6,"nodeType":"177","endLine":15,"endColumn":8,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"179","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"180","line":39,"column":6,"nodeType":"177","endLine":39,"endColumn":24,"suggestions":"181"},{"ruleId":"171","severity":1,"message":"179","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"182","line":3,"column":34,"nodeType":"173","messageId":"174","endLine":3,"endColumn":37},{"ruleId":"171","severity":1,"message":"183","line":12,"column":3,"nodeType":"173","messageId":"174","endLine":12,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":25},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["187"],"'Row' is defined but never used.","'ORDER_LIST_MY_ORDERS_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"194","text":"195"},[574,576],"[dispatch]",[1231,1249],"[success, history, order._id, dispatch]"]