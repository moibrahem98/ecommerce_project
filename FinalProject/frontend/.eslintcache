[{"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\index.jsx":"1","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reportWebVitals.js":"2","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\App.jsx":"3","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\store.jsx":"4","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\categorySelect.jsx":"5","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\HomePage.jsx":"6","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductPage.jsx":"7","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\LoginPage.jsx":"8","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\CartPage.jsx":"9","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProfilePage.jsx":"10","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\RegisterPage.jsx":"11","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UpdateProfilePage.jsx":"12","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ShippingPage.jsx":"13","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\PaymentPage.jsx":"14","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\MyOrdersPage.jsx":"15","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\PlaceOrderPage.jsx":"16","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\OrderPage.jsx":"17","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ContactUsPage.jsx":"18","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductListPage.jsx":"19","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductEditPage.jsx":"20","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\OrderListPage.jsx":"21","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserListPage.jsx":"22","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\CategoryPage.jsx":"23","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\SubCategoryPage.jsx":"24","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserEditPage.jsx":"25","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnsListPage.jsx":"26","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnDetailsPage.jsx":"27","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\MyReturnsPage.jsx":"28","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserPanal\\UserPanal.jsx":"29","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\AdminPages\\AdminPanalPage.jsx":"30","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\BrandPages\\BrandListPage.jsx":"31","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\BrandPages\\BrandDetailsPage.jsx":"32","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\cartReducers.jsx":"33","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\productReducers.jsx":"34","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\orderReducers.jsx":"35","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\userReducers.jsx":"36","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Header.jsx":"37","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnCreatePage.jsx":"38","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Footer.jsx":"39","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\SearchPage.jsx":"40","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Loader.jsx":"41","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Message.jsx":"42","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Product.jsx":"43","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\ProductCarousel.jsx":"44","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\FormContainer.jsx":"45","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\LatestProductsCarousel.jsx":"46","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CarouselSlider.jsx":"47","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Rating.jsx":"48","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\productActions.jsx":"49","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\userActions.jsx":"50","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\orderActions.jsx":"51","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CatSlider.jsx":"52","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\SearchBox.jsx":"53","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CheckoutSteps.jsx":"54","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\cartActions.jsx":"55"},{"size":402,"mtime":1640346237098,"results":"56","hashOfConfig":"57"},{"size":375,"mtime":1640346237114,"results":"58","hashOfConfig":"57"},{"size":4356,"mtime":1640690306086,"results":"59","hashOfConfig":"57"},{"size":3589,"mtime":1640690306140,"results":"60","hashOfConfig":"57"},{"size":2703,"mtime":1640521317695,"results":"61","hashOfConfig":"57"},{"size":1569,"mtime":1640620893852,"results":"62","hashOfConfig":"57"},{"size":9857,"mtime":1640620893853,"results":"63","hashOfConfig":"57"},{"size":2811,"mtime":1640532531761,"results":"64","hashOfConfig":"57"},{"size":4658,"mtime":1640703060248,"results":"65","hashOfConfig":"57"},{"size":2163,"mtime":1640532531777,"results":"66","hashOfConfig":"57"},{"size":3961,"mtime":1640346237098,"results":"67","hashOfConfig":"57"},{"size":4087,"mtime":1640532531777,"results":"68","hashOfConfig":"57"},{"size":3239,"mtime":1640346237114,"results":"69","hashOfConfig":"57"},{"size":3079,"mtime":1640346237098,"results":"70","hashOfConfig":"57"},{"size":2935,"mtime":1640532531761,"results":"71","hashOfConfig":"57"},{"size":6012,"mtime":1640532531761,"results":"72","hashOfConfig":"57"},{"size":7880,"mtime":1640703248991,"results":"73","hashOfConfig":"57"},{"size":658,"mtime":1640532531761,"results":"74","hashOfConfig":"57"},{"size":4595,"mtime":1640620893853,"results":"75","hashOfConfig":"57"},{"size":8328,"mtime":1640690306102,"results":"76","hashOfConfig":"57"},{"size":2806,"mtime":1640620893853,"results":"77","hashOfConfig":"57"},{"size":3019,"mtime":1640690306124,"results":"78","hashOfConfig":"57"},{"size":2800,"mtime":1640690306094,"results":"79","hashOfConfig":"57"},{"size":1416,"mtime":1640691579528,"results":"80","hashOfConfig":"57"},{"size":3268,"mtime":1640690306124,"results":"81","hashOfConfig":"57"},{"size":2729,"mtime":1640620893854,"results":"82","hashOfConfig":"57"},{"size":6794,"mtime":1640690306124,"results":"83","hashOfConfig":"57"},{"size":2790,"mtime":1640532531777,"results":"84","hashOfConfig":"57"},{"size":4525,"mtime":1640532531777,"results":"85","hashOfConfig":"57"},{"size":4855,"mtime":1640620893851,"results":"86","hashOfConfig":"57"},{"size":2170,"mtime":1640690306094,"results":"87","hashOfConfig":"57"},{"size":1803,"mtime":1640690306094,"results":"88","hashOfConfig":"57"},{"size":1151,"mtime":1640346237114,"results":"89","hashOfConfig":"57"},{"size":10491,"mtime":1640690306124,"results":"90","hashOfConfig":"57"},{"size":3089,"mtime":1640346237114,"results":"91","hashOfConfig":"57"},{"size":3071,"mtime":1640346237114,"results":"92","hashOfConfig":"57"},{"size":5647,"mtime":1640728644709,"results":"93","hashOfConfig":"57"},{"size":3786,"mtime":1640728644738,"results":"94","hashOfConfig":"57"},{"size":3773,"mtime":1640728644707,"results":"95","hashOfConfig":"57"},{"size":1754,"mtime":1640728644739,"results":"96","hashOfConfig":"57"},{"size":396,"mtime":1640346237020,"results":"97","hashOfConfig":"57"},{"size":196,"mtime":1640346237020,"results":"98","hashOfConfig":"57"},{"size":915,"mtime":1640690306094,"results":"99","hashOfConfig":"57"},{"size":1698,"mtime":1640690306094,"results":"100","hashOfConfig":"57"},{"size":353,"mtime":1640346237020,"results":"101","hashOfConfig":"57"},{"size":1747,"mtime":1640690306094,"results":"102","hashOfConfig":"57"},{"size":1168,"mtime":1640521317695,"results":"103","hashOfConfig":"57"},{"size":1569,"mtime":1640346237036,"results":"104","hashOfConfig":"57"},{"size":15450,"mtime":1640690306086,"results":"105","hashOfConfig":"57"},{"size":6079,"mtime":1640346237020,"results":"106","hashOfConfig":"57"},{"size":4804,"mtime":1640346237020,"results":"107","hashOfConfig":"57"},{"size":1162,"mtime":1640728644706,"results":"108","hashOfConfig":"57"},{"size":1008,"mtime":1640728644710,"results":"109","hashOfConfig":"57"},{"size":1292,"mtime":1640346237020,"results":"110","hashOfConfig":"57"},{"size":1118,"mtime":1640346237020,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13csuay",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\index.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reportWebVitals.js",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\App.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\store.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\categorySelect.jsx",["247","248","249","250","251","252","253","254","255","256","257"],"import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Col,\r\n  ListGroup,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listCategories } from \"../actions/productActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction InternalSearch() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [minprice, setMinprice] = useState(\"\");\r\n  const [maxprice, setMaxprice] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (name) {\r\n      history.push(\r\n        `/?name=${name}&price_min=${minprice}&price_max=${maxprice}`\r\n      );\r\n    } else {\r\n      history.push(history.push(history.location.pathname));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <Col md={4}>\r\n        <Card className=\" shadow rounded-sm\" style={{ alignItems: \"center\" }}>\r\n          <Form onSubmit={submitHandler} inline style={{ marginTop: \"15px\" }}>\r\n            <ListGroup>\r\n              <label for=\"search\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n\r\n              <input\r\n                className=\"form-control d-inline m-3\"\r\n                type=\"text\"\r\n                name=\"q\"\r\n                placeholder=\"search\"\r\n                onChange={(event) => setName(event.target.value)}\r\n              />\r\n            </ListGroup>\r\n            <ListGroup>\r\n              <label for=\"search\" class=\"form-label\">\r\n                Price\r\n              </label>\r\n\r\n              <div className=\"d-inline\">\r\n                <input\r\n                  type=\"text\"\r\n                  price=\"1\"\r\n                  style={{ width: \"150px \" }}\r\n                  className=\" form-control d-inline\"\r\n                  onChange={(event) => setMinprice(event.target.value)}\r\n                  placeholder=\"Min Price\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  price=\"1\"\r\n                  style={{ width: \"150px \" }}\r\n                  className=\" form-control d-inline\"\r\n                  onChange={(event) => setMaxprice(event.target.value)}\r\n                  placeholder=\"Max Price\"\r\n                />\r\n              </div>\r\n            </ListGroup>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InternalSearch;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\HomePage.jsx",["258","259","260","261","262","263","264","265"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport LatestProductsCarousel from \"../components/LatestProductsCarousel\";\r\nimport CatSlider from \"../components/CatSlider\";\r\nimport CarouselSlider from \"../components/CarouselSlider\";\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products } = productList;\r\n\r\n  let name = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(name));\r\n  }, [dispatch, name]);\r\n  return (\r\n    <>\r\n      <CarouselSlider />\r\n\r\n      <Container style={{ marginTop: \" 20px\" }}>\r\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1\">\r\n          Shop By Category\r\n        </h3>\r\n        <CatSlider />\r\n        <hr />\r\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1\">\r\n          Top Rated Products\r\n        </h3>\r\n        {!name && <ProductCarousel />}\r\n        <br /> <hr />\r\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1 mt-5\">\r\n          Latest Products\r\n        </h3>\r\n        {!name && <LatestProductsCarousel />}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\LoginPage.jsx",["266"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { FormContainer } from \"../components/FormContainer\";\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Row>\r\n        <Col lg={5} md={6} sm={12} className=\"p-5 m-auto shadow rounded-lg\">\r\n          <h3 className=\"mt-1 p-2 text-center\">CUSTOMER LOGIN</h3>{\" \"}\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader></Loader>}\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <br></br>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <br></br>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"w-100 text-success btn_color\"\r\n            >\r\n              LOGLN{\" \"}\r\n            </Button>\r\n          </Form>\r\n          <br></br>\r\n          <Row>\r\n            <Col>\r\n              Don't Have Account ?{\" \"}\r\n              <Link\r\n                className=\"btn btn-secondary \"\r\n                to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n              >\r\n                CREATE ACCOUNT\r\n              </Link>\r\n            </Col>{\" \"}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\CartPage.jsx",["267"],"import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row>\r\n        <Col md={8} sm={12}>\r\n          <h3>Shopping Cart</h3>\r\n          {cartItems.length === 0 ? (\r\n            <Message variant=\"info\">\r\n              Your cart is empty <Link to=\"\">Back</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant=\"flush\">\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n\r\n                    <Col md={2}>{item.price} L.E</Col>\r\n\r\n                    <Col md={3} className=\"d-flex justify-content-between my-3\">\r\n                      <Form.Control\r\n                        rounded\r\n                        style={{\r\n                          border: \"1px solid  #e3e3e3\",\r\n                          borderRadius: \"11px\",\r\n                        }}\r\n                        className=\"mr-3\"\r\n                        as=\"select\"\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(item.product, Number(e.target.value))\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.stock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                      <div>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"outline-danger\"\r\n                          onClick={() => removeFromCartHandler(item.product)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    {/* \r\n                    <Col md={1}>\r\n\r\n                    </Col> */}\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={4} sm={12}>\r\n          <Card className=\" shadow rounded-sm\">\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <h3\r\n                  className=\"rounded p-3\"\r\n                  style={{\r\n                    fontFamily: \"monospace\",\r\n                    textAlign: \"center\",\r\n                    backgroundColor: \"WhiteSmoke\",\r\n                  }}\r\n                >\r\n                  Sub-Total\r\n                </h3>\r\n                <hr />\r\n                <p>\r\n                  {cartItems.reduce((acc, item) => acc + item.qty, 0)} items\r\n                </p>\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}{\" \"}\r\n                L.E\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                variant=\"dark\"\r\n                className=\" text-success w-100 btn_color\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProfilePage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\RegisterPage.jsx",["268"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5\">\r\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\r\n          <h3 className=\" text-success mt-1 p-1 text-center \">\r\n            CREATE ACCOUNT\r\n          </h3>{\" \"}\r\n          <Form onSubmit={submitHandler}>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"passwordConfirm\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"w-100 text-success btn_color\"\r\n            >\r\n              CREATE\r\n            </Button>\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              Have Account?{\" \"}\r\n              <Link\r\n                to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n                className=\"btn btn-secondary\"\r\n              >\r\n                LOGIN\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UpdateProfilePage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ShippingPage.jsx",["269","270"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [telephoneNumber, setTelephoneNumber] = useState(\r\n    shippingAddress.telephoneNumber\r\n  );\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit\");\r\n    dispatch(saveShippingAddress({ address, city, telephoneNumber, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CheckoutSteps step1 step2 />\r\n      <Row className=\"mt-5\">\r\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\r\n          <h1 className=\" text-succes mt-1 p-1 text-center \">Shipping</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter address\"\r\n                value={address ? address : \"\"}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"city\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter city\"\r\n                value={city ? city : \"\"}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"telephoneNumber\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={telephoneNumber ? telephoneNumber : \"\"}\r\n                onChange={(e) => setTelephoneNumber(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"country\">\r\n              <Form.Label>Government</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter country\"\r\n                value={country ? country : \"\"}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"w-100 text-success btn_color\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\PaymentPage.jsx",["271","272","273"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport axios from \"axios\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  // const [paymob, setPaymob] = useState(\"\");\r\n  // const paymobFunction = useEffect(() => {\r\n  //   const getData = async () => {\r\n  //     await axios\r\n  //       .get(\"/order/api/orders/payment/\")\r\n  //       .then((res) => {\r\n  //         setPaymob(res.data);\r\n  //         console.log(res);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //       });\r\n  //   };\r\n  //   getData();\r\n\r\n  // }, []);\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row className=\"mt-5\">\r\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <h1 className=\" text-succes mt-1 p-1 text-center \">\r\n                Select Payment Method\r\n              </h1>\r\n              <hr></hr>\r\n              <Col>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"Cash on Delievery\"\r\n                  id=\"cod\" // cod is cash on delievery\r\n                  name=\"paymentMethod\"\r\n                  value=\"Cash on Delievery\"\r\n                  onChange={(event) => {\r\n                    setPaymentMethod(event.target.value);\r\n                  }}\r\n                ></Form.Check>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"Paymob\"\r\n                  id=\"paymob\"\r\n                  value=\"paymob\"\r\n                  name=\"paymentMethod\"\r\n                  onChange={(event) => {\r\n                    setPaymentMethod(event.target.value);\r\n                  }}\r\n                ></Form.Check>\r\n              </Col>\r\n            </Form.Group>\r\n            {/* <input\r\n        type=\"button\"\r\n        value=\"Paymob\"\r\n        className=\"btn text-success btn_color\"\r\n        onclick={window.open(\r\n          \"http://127.0.0.1:8000/order/api/orders/payment/\"\r\n        )}\r\n      /> */}\r\n\r\n            <br></br>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"w-100 text-success btn_color\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\MyOrdersPage.jsx",["274","275"],"import { listMyOrders } from \"../actions/orderActions\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nfunction MyOrdersScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || userInfo._id !== user._id) {\r\n        dispatch(listMyOrders());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  return (\r\n    <div className=\"py-5\">\r\n      <Row md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th>order details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.created_at.substring(0, 10)}</td>\r\n                  <td>{order.total_price} L.E</td>\r\n                  <td>\r\n                    {order.is_paid ? (\r\n                      order.paid_at.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.is_delivered ? (\r\n                      order.delivered_at.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant=\"light\" className=\" btn-sm \">\r\n                        {\" \"}\r\n                        Details{\" \"}\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyOrdersScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\PlaceOrderPage.jsx",["276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((sum, item) => sum + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  if (cart.itemsPrice > 500) {\r\n    (cart.shippingPrice = 0).toFixed(2);\r\n  } else {\r\n    (cart.shippingPrice = 50).toFixed(2);\r\n  }\r\n  cart.totalPrice = (\r\n    Number(cart.shippingPrice) + Number(cart.itemsPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: \"ORDER_CREATE_RESET\" });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"py-5\">\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h4>Shipping Address: </h4>\r\n                <p>Phone Number: {cart.shippingAddress.telephoneNumber}</p>\r\n                <p>\r\n                  {\" \"}\r\n                  {cart.shippingAddress.address} , {cart.shippingAddress.city},{\" \"}\r\n                  {cart.shippingAddress.country} , Egypt.{\" \"}\r\n                </p>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h4>Payment Method</h4>\r\n                <p>\r\n                  {\" \"}\r\n                  {cart.paymentMethod === \"paymob\" ? (\r\n                    <Row>\r\n                      <Col>\r\n                        {\" \"}\r\n                        {cart.paymentMethod}\r\n                        <br />\r\n                        <button\r\n                          value=\"Paymob\"\r\n                          className=\"btn disabled text-success btn_color\"\r\n                          onclick={window.open(\r\n                            \"http://127.0.0.1:8000/order/api/orders/payment/\"\r\n                          )}\r\n                        >\r\n                          Paymob\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : (\r\n                    <p>{cart.paymentMethod} </p>\r\n                  )}\r\n                </p>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h4>Items</h4>\r\n                {cart.cartItems.length === 0 ? (\r\n                  <Message variant=\"info\">Your Cart Is Empty</Message>\r\n                ) : (\r\n                  <ListGroup variant=\"flush\">\r\n                    {cart.cartItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col>\r\n                            {item.qty} X {item.price} L.E ={\" \"}\r\n                            {(item.qty * item.price).toFixed(2)} L.E\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"shadow rounded-sm\">\r\n            <ListGroup variant=\"secondary\">\r\n              <ListGroup.Item>\r\n                <h3> Total</h3>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Col>ItemsPrice:</Col>\r\n                <Col>{cart.itemsPrice} L.E</Col>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Col>Shipping:</Col>\r\n                <Col>{cart.shippingPrice} L.E</Col>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Col>Total:</Col>\r\n                <Col>{cart.totalPrice} L.E</Col>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  variant=\"dark\"\r\n                  type=\"button\"\r\n                  className=\"btn text-success w-100 btn_color\"\r\n                  disapled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Ordrer\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\OrderPage.jsx",["278","279","280"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getOrderDetails,\r\n  deliverOrder,\r\n  payOrder,\r\n} from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !order ||\r\n      order._id !== Number(orderId) ||\r\n      successDeliver ||\r\n      successPay\r\n    ) {\r\n      dispatch({ type: \"ORDER_PAY_RESET\" });\r\n      dispatch({ type: \"ORDER_DELIVER_RESET\" });\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  const payHandler = () => {\r\n    dispatch(payOrder(order));\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  } else if (error) {\r\n    return <Message variant=\"danger\">{error}</Message>;\r\n  } else {\r\n    return (\r\n      <div className=\"py-5\">\r\n        <Message variant=\"success\">\r\n          <p> order placed successfully &#10004; </p>\r\n        </Message>\r\n        <Row>\r\n          <Col md={8}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping Address</h2>\r\n                  <p>\r\n                    <span>Name: </span>\r\n                    {order.user.name}\r\n                  </p>\r\n                  <p>Phone Number: {order.shippingAddress.telephone_number}</p>\r\n                  <p>\r\n                    {order.shippingAddress.address} ,{\" \"}\r\n                    {order.shippingAddress.city},{\" \"}\r\n                    {order.shippingAddress.country} , Egypt.\r\n                  </p>\r\n                  {order.is_delivered ? (\r\n                    <Message variant=\"success\">\r\n                      Deliverd at {order.delivered_at.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"warning\">Not Deliverd</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>Method: {order.payment_method}</p>\r\n\r\n                  {order.is_paid ? (\r\n                    <Message variant=\"success\">\r\n                      Paid at {order.paid_at.substring(0, 10)}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"warning\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Items</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message variant=\"info\">Your order Is Empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={4}>Product Name</Col>\r\n                            <Col className=\"justify-contnet-center\" md={2}>\r\n                              QTY\r\n                            </Col>\r\n                            <Col className=\"justify-contnet-center\" md={2}>\r\n                              Unit Price\r\n                            </Col>\r\n                            <Col className=\"justify-contnet-center\" md={2}>\r\n                              Price\r\n                            </Col>\r\n                          </Row>\r\n                          <br></br>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={2}>{item.quantity}</Col>\r\n                            <Col md={2}>{item.price} L.E </Col>\r\n                            <Col md={2}>\r\n                              {(item.quantity * item.price).toFixed(2)} L.E\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card className=\" shadow rounded-sm\">\r\n              <ListGroup variant=\"secondary\">\r\n                <ListGroup.Item>\r\n                  <h2>Total</h2>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Col>Sub-Total:</Col>\r\n                  <Col>{order.itemsPrice} L.E</Col>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>{order.shipping_price} L.E</Col>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Col>Total:</Col>\r\n                  <Col>{order.total_price} L.E</Col>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n              {userInfo && order.is_paid && order.is_delivered && (\r\n                <ListGroup.Item>\r\n                  <Link\r\n                    variant=\"dark\"\r\n                    className=\"btn btn-block text-success btn_color\"\r\n                    to=\"/createreturn\"\r\n                  >\r\n                    File Return Request{\" \"}\r\n                  </Link>\r\n                </ListGroup.Item>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && !order.is_paid && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    variant=\"dark\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-block text-success btn_color\"\r\n                    onClick={payHandler}\r\n                  >\r\n                    Mark As Paid\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && !order.is_delivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    variant=\"dark\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-block btn_color\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ContactUsPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductListPage.jsx",["281"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  let hist = useHistory();\r\n\r\n  // let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"PRODUCT_CREATE_RESET\" });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    // keyword,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n      <Row className=\"align-items-center\">\r\n        <Col md={9}>\r\n          <h1>Products</h1>\r\n        </Col>\r\n\r\n        <Col className=\"text-right\" md={3}>\r\n          <Button className=\"my-3 btn_color\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>SUB CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>\r\n                    <a href={`/product/${product._id}`}>\r\n                      <strong>{product.name}</strong>\r\n                    </a>\r\n                  </td>\r\n                  <td>{product.price} L.E</td>\r\n                  <td>{product.category1.name}</td>\r\n                  <td>{product.subcategory1.name}</td>\r\n                  <td>{product.brand1.name}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ProductEditPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\OrderListPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserListPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\CategoryPage.jsx",["282","283","284"],"import React, { useEffect } from \"react\";\r\nimport { Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getProductByCategory,\r\n  listSubCategories,\r\n} from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n// import InternalSearch from \"../components/categorySelect\";\r\n\r\nfunction CategoryPage({ match, history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const categoryProducts = useSelector((state) => state.categoryProducts);\r\n  const { loading, error, products } = categoryProducts;\r\n  const subcategoriesList = useSelector((state) => state.subcategoriesList);\r\n  const {\r\n    loading: subcategoriesLoading,\r\n    error: subcategoriesError,\r\n    subcategories,\r\n  } = subcategoriesList;\r\n\r\n  let name = history.location.search;\r\n  useEffect(() => {\r\n    dispatch(listSubCategories());\r\n    dispatch(getProductByCategory(match.params.id, name));\r\n  }, [dispatch, match, name]);\r\n\r\n  if (!products) return null;\r\n  if (!subcategories) return null;\r\n\r\n  return (\r\n    <div className=\"py-5\">\r\n      <h2 className=\"h1 heading_1\">{products[0].category1.name}</h2>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Container>\r\n          {/* <InternalSearch /> */}\r\n          <Row md={8}>\r\n            {subcategories.map((subcategory) => (\r\n              <p>\r\n                {subcategory.category == match.params.id && (\r\n                  <Row sm={12} md={6} lg={4} xl={3}>\r\n                    <Col className=\"\" style={{ width: \"250px\" }}>\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href={`/subcategoryproducts/${subcategory.id}`}\r\n                      >\r\n                        <Card.Img src={subcategory.img} />\r\n                        <h5\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"black\",\r\n                            marginTop: \"20px\",\r\n                          }}\r\n                        >\r\n                          {subcategory.name}\r\n                        </h5>\r\n                      </a>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </p>\r\n            ))}\r\n          </Row>\r\n\r\n          <h2>All Products</h2>\r\n\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\SubCategoryPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserEditPage.jsx",["285","286"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../../actions/userActions\";\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: \"USER_UPDATE_RESET\" });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  let hist = useHistory();\r\n  return (\r\n    <div>\r\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n      <FormContainer>\r\n        <h2>Edit User</h2>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn_color\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnsListPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnDetailsPage.jsx",["287","288","289","290","291","292","293"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { payOrder } from \"../../actions/orderActions\";\r\nimport { getReturnsDetails, issueStatus } from \"../../actions/productActions\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\n\r\nfunction ReturnsDetailsPage({ match, history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const returnDetails = useSelector((state) => state.returnDetails);\r\n  const { loading, error, returns } = returnDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getReturnsDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n  const issueHandler = () => {\r\n    dispatch(issueStatus(returns));\r\n  };\r\n\r\n  if (!returns) return null;\r\n  return (\r\n    <div>\r\n      <Row className=\"mt-5\">\r\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\r\n          <Row>\r\n            <Col>\r\n              {\" \"}\r\n              <h1>Return Request No.{returns.id}</h1>\r\n              <hr />\r\n              <h4 style={{ textAlign: \"center\" }}> Details </h4>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <strong> User Name:</strong>\r\n              <h6 className=\"d-inline\"> {returns.user.name} </h6>\r\n            </Col>\r\n            <Col>\r\n              <strong> Filed at:</strong>\r\n              <h6 className=\"d-inline\">\r\n                {returns.created_at.substring(0, 10)}{\" \"}\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <strong> Product Name :</strong>\r\n              <h6 className=\"d-inline\"> {returns.product_name} </h6>\r\n            </Col>\r\n            <Col>\r\n              <strong> Order Number :</strong>\r\n              <h6 className=\"d-inline\"> {returns.order_num} </h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <strong> Complain :</strong>\r\n              <h6 className=\"d-inline\"> {returns.title} </h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <strong> Details :</strong>\r\n              <h6 className=\"d-inline\"> {returns.issue} </h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <strong> Issue State :</strong>\r\n              <h6 className=\"d-inline\">\r\n                {returns.issue_status ? <i> Solved </i> : <i>Not Solved </i>}\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {\" \"}\r\n            <Col>\r\n              {userInfo && userInfo.isAdmin && !returns.issue_status && (\r\n                <Button\r\n                  variant=\"dark\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-block  btn_color\"\r\n                  onClick={issueHandler}\r\n                >\r\n                  Mark As Solved\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReturnsDetailsPage;\r\n\r\n// function ReturnDetailsPage({ history, match }) {\r\n//   const returnId = match.params.id;\r\n//   console.log(returnId, \"+++++++++++++++++++\");\r\n//   // const returnsDetails = useSelector((state) => state.returnsDetails);\r\n//   // const { data } = returnsDetails;\r\n//   const [returns, setReturns] = useState(\"\");\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n//   useEffect(() => {\r\n//     const getReturnDetails = (returnId) => async () => {\r\n//       await axios.get(`/product/api/returns/${returnId}/`).then((response) => {\r\n//         setReturns(response.data);\r\n//       });\r\n//     };\r\n//     getReturnDetails();\r\n//     // dispatch(getReturnsDetails(returnId));\r\n//   }, [dispatch, history, userInfo, returnId, returns]);\r\n\r\n//   //   console.log(userInfo.isAdmin, \"userInfo.isAdmin\");\r\n//   //   console.log(userInfo, \"userInfo\");\r\n//   console.log(returns, \"returns\");\r\n//   // if (!returns) return null;\r\n//   return <div>{/* <div>{returns.title}</div> */}</div>;\r\n// }\r\n// export default function ReturnsListPage({ history }) {\r\n//   const [returns, setReturns] = useState(null);\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n//   useEffect(() => {\r\n//     if (userInfo && userInfo.isAdmin) {\r\n//       axios.get(\"/product/api/returns/\").then((response) => {\r\n//         setReturns(response.data);\r\n//       });\r\n//     } else {\r\n//       history.push(\"/login\");\r\n//     }\r\n//   }, [, history, userInfo]);\r\n//   //   useEffect(() => {\r\n//   //     axios.get(\"/product/api/returns/\").then((response) => {\r\n//   //       setReturns(response.data);\r\n//   //     });\r\n//   //   }, []);\r\n\r\n//   console.log(userInfo.isAdmin, \"userInfo.isAdmin\");\r\n//   console.log(userInfo, \"userInfo\");\r\n//   console.log(returns, \"returns\");\r\n//   if (!returns) return null;\r\n//   if (!userInfo && !userInfo.isAdmin) {\r\n//     return <p>not allowed</p>;\r\n//   } else {\r\n//     return (\r\n//       <div>\r\n//         <h1>Returns Requests:</h1>\r\n\r\n//         <div>\r\n//           {returns.map((ret) => (\r\n//             <p>{ret.title}</p>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function ReturnDetailsPage({ match }) {\r\n//   const returnId = match.params.id;\r\n//   const dispatch = useDispatch();\r\n\r\n//   //   const orderDetails = useSelector((state) => state.orderDetails);\r\n//   //   const { order, error, loading } = orderDetails;\r\n\r\n//   const returnsDetails = useSelector((state) => state.returnsDetails);\r\n//   const { returns, error, loading } = returnsDetails;\r\n\r\n//   const orderPay = useSelector((state) => state.orderPay);\r\n//   const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n//   const issueState = useSelector((state) => state.issueState);\r\n//   const { loading: loadingIssue, success: successIssue } = issueState;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   useEffect(() => {\r\n//     if (\r\n//       !returns ||\r\n//       returns.id !== Number(returnId) ||\r\n//       successPay ||\r\n//       successIssue\r\n//     ) {\r\n//       dispatch(getReturnsDetails(returnId));\r\n//     }\r\n//   }, [dispatch, returns, returnId, successPay, successIssue]);\r\n\r\n//   //   const payHandler = () => {\r\n//   //     dispatch(payOrder(order));\r\n//   //   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>{returns.title}</div>\r\n//     </div>\r\n//   );\r\n// }\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\MyReturnsPage.jsx",["294","295","296","297","298"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, Table, Card } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { listMyReturnsFunction } from \"../../actions/productActions\";\r\n\r\nfunction MyReturnsPage({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const listMyReturns = useSelector((state) => state.listMyReturns);\r\n  const {\r\n    loading: loadingReturns,\r\n    error: errorReturns,\r\n    returns,\r\n  } = listMyReturns;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || userInfo._id !== user._id) {\r\n        dispatch(listMyReturnsFunction());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  return (\r\n    <div className=\"py-5 text-center\" style={{ alignItems: \"center\" }}>\r\n      <h2 style={{ textAlign: \"center\" }}>My Returns</h2>\r\n      <Row md={9}>\r\n        {loadingReturns ? (\r\n          <Loader />\r\n        ) : errorReturns ? (\r\n          <Message variant=\"danger\">{errorReturns}</Message>\r\n        ) : (\r\n          <Row>\r\n            {\" \"}\r\n            {returns.map((ret) => (\r\n              <Card md={4} className=\"pt-2 rounded text-center\">\r\n                <Card.Title style={{ marginTop: \"5px\" }}>\r\n                  <a\r\n                    style={{ color: \"black\" }}\r\n                    href={`/returndetails/${ret.id}`}\r\n                  >\r\n                    {\" \"}\r\n                    <h5>Issue:{ret.title}</h5>\r\n                  </a>\r\n                </Card.Title>\r\n                <Card.Body>\r\n                  <h6>Details:</h6>\r\n                  <p>\r\n                    <strong> {ret.issue}</strong>\r\n                    <hr />\r\n                    <strong>Product: </strong>\r\n                    {ret.product_name}\r\n                    <hr />\r\n                    <strong>Order Number: </strong>\r\n                    {ret.order_num}\r\n                  </p>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  {\" \"}\r\n                  <strong> Issue State : </strong>\r\n                  <h6 className=\"d-inline\">\r\n                    {ret.issue_status ? <i> Solved </i> : <i>Not Solved </i>}\r\n                  </h6>\r\n                  <br></br>\r\n                </Card.Footer>\r\n              </Card>\r\n            ))}\r\n          </Row>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyReturnsPage;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\UserPages\\UserPanal\\UserPanal.jsx",["299","300","301","302"],"import { Col, Row } from \"react-bootstrap\";\r\nimport \"./UserPanal.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { listMyReturnsFunction } from \"../../../actions/productActions\";\r\n\r\nimport { listMyOrders } from \"../../../actions/orderActions\";\r\n\r\nfunction UserPanal({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n  const listMyReturns = useSelector((state) => state.listMyReturns);\r\n  const {\r\n    loading: loadingReturns,\r\n    error: errorReturns,\r\n    returns,\r\n  } = listMyReturns;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || userInfo._id !== user._id) {\r\n        dispatch(listMyOrders());\r\n        dispatch(listMyReturnsFunction());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  console.log(userInfo, \"llllllllllllllllllll\");\r\n  if (!orders) return null;\r\n  if (!userInfo) return null;\r\n  if (!returns) return null;\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2\">Profile</h2>\r\n\r\n      <div className=\"container\">\r\n        <Row>\r\n          <Col md={6}>\r\n            <div className=\"ad_card bg-success\">\r\n              <div className=\"card-statistic-3\">\r\n                <div>\r\n                  <a href=\"/profile\">\r\n                    <h2 className=\"ad_card_title d-inline-block pr-1\">\r\n                      Profile\r\n                    </h2>\r\n                    <i class=\"far fa-user-circle text-light ad_icon\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"row align-items-center d-flex\">\r\n                  <div className=\"col-8\">\r\n                    <h2 className=\"d-flex align-items-center\">\r\n                      {userInfo.name}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <div className=\"ad_card bg-warning\">\r\n              <div className=\"card-statistic-3\">\r\n                <div>\r\n                  <a href=\"/myorders\">\r\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\r\n                      {\" \"}\r\n                      Orders\r\n                    </h2>\r\n                    <i class=\"far fa-shopping-bag text-light ad_icon\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"row align-items-center d-flex\">\r\n                  <div className=\"col-8\">\r\n                    <h2 className=\"d-flex align-items-center\">\r\n                      {orders.length}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <div className=\"ad_card bg-danger\">\r\n              <div className=\"card-statistic-3\">\r\n                <div>\r\n                  <a href=\"/myreturns\">\r\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\r\n                      My Returns\r\n                    </h2>\r\n                    <i class=\"far fa-undo-alt text-light ad_icon\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"row align-items-centr d-flex\">\r\n                  <div className=\"col-8\">\r\n                    <h2 className=\"d-flex align-items-center\">\r\n                      {returns.length}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <div className=\"ad_card bg-info\">\r\n              <div className=\"card-statistic-3\">\r\n                <div>\r\n                  <a href=\"/update\">\r\n                    {\" \"}\r\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\r\n                      Update Profile\r\n                    </h2>\r\n                    <i className=\"far fa-pencil text-light ad_icon\"></i>\r\n                    <button className=\"btn btn-block btn-light\">Click</button>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPanal;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\AdminPages\\AdminPanalPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\BrandPages\\BrandListPage.jsx",["303","304"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { listBrandsFunction } from \"../../actions/productActions\";\r\n\r\nfunction BrandsListPage({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const listBrands = useSelector((state) => state.listBrands);\r\n  const { loading, error, brands } = listBrands;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listBrandsFunction());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n  let hist = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n      <h2>Brands</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {\" \"}\r\n          {brands.map((brand) => (\r\n            <Card md={4} className=\"pt-2 rounded text-center\">\r\n              <Card.Title style={{ marginTop: \"5px\" }}>\r\n                <a style={{ color: \"black\" }} href={`/brand/${brand.id}`}>\r\n                  {\" \"}\r\n                  <h5>{brand.name}</h5>\r\n                  <hr />\r\n                </a>\r\n              </Card.Title>\r\n              <Card.Body>\r\n                <a\r\n                  style={{ color: \"black\" }}\r\n                  href={`/returndetails/${brand.id}`}\r\n                >\r\n                  {\" \"}\r\n                  <img\r\n                    src={brand.img}\r\n                    alt={brand.name}\r\n                    style={{ width: \"100px\" }}\r\n                  />\r\n                </a>{\" \"}\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrandsListPage;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\BrandPages\\BrandDetailsPage.jsx",["305"],"import React, { useEffect } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getBrandDetails,\r\n  getProductByBrand,\r\n} from \"../../actions/productActions\";\r\nimport Product from \"../../components/Product\";\r\nfunction BrandDetailsPage({ match, history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const brandDetails = useSelector((state) => state.brandDetails);\r\n  const { brand } = brandDetails;\r\n\r\n  const brandProducts = useSelector((state) => state.brandProducts);\r\n  const { product } = brandProducts;\r\n\r\n  useEffect(() => {\r\n    dispatch(getBrandDetails(match.params.id));\r\n    dispatch(getProductByBrand(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  if (!brand) return null;\r\n  if (!product) return null;\r\n  console.log(product, \"pppppppppppppppp\");\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <div style={{ textAlign: \"center\", alignItems: \"center\" }}>\r\n        <img\r\n          style={{\r\n            width: \"50%\",\r\n            height: \"50%\",\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          src={brand.img}\r\n          alt={brand.name}\r\n        />\r\n      </div>\r\n      <hr />\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontFamily: \"Hind Guntur Semi-bold 600\",\r\n            fontSize: \"7em\",\r\n          }}\r\n        >\r\n          See More Products From {brand.name}\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <Row>\r\n        {product.map((product) => (\r\n          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n            <Product product={product} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrandDetailsPage;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\cartReducers.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\productReducers.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\orderReducers.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\reducers\\userReducers.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Header.jsx",["306","307","308","309","310"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown, L } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport logo from \"../images/brand.png\";\r\n// import SearchBox from \"./SearchBox\";\r\nimport { listCategories } from \"../actions/productActions\";\r\nimport { Link } from \"react-router-dom\";\r\n// import DarkMode from \"../DarkMode\";\r\n\r\nfunction Header() {\r\n  const categoriesList = useSelector((state) => state.categoriesList);\r\n  const { categories } = categoriesList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [show, setShow] = useState(false);\r\n  const showDropdown = (e) => {\r\n    setShow(!show);\r\n  };\r\n  const hideDropdown = (e) => {\r\n    setShow(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  const [navBackground, setNavBackground] = useState(false);\r\n  const navRef = useRef();\r\n  navRef.current = navBackground;\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n\r\n    const handleScroll = () => {\r\n      const show = window.scrollY > 50;\r\n      if (navRef.current !== show) {\r\n        setNavBackground(show);\r\n      }\r\n    };\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  if (!categories) return null;\r\n\r\n  return (\r\n    <header style={{ marginBottom: \"75px\", alignItems: \"center\" }}>\r\n      <Navbar\r\n        expand=\"lg\"\r\n        collapseOnSelect\r\n        fixed=\"top\"\r\n        style={{\r\n          transition: \".5s ease\",\r\n          backgroundColor: navBackground ? \"#fff\" : \"transparent\",\r\n          zIndex: \"1500\",\r\n          color: \"#232323\",\r\n        }}\r\n        className=\"hea\"\r\n      >\r\n        <Container fluid className=\"navbar align-items-center\">\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                src={logo}\r\n                className=\"logo_img\"\r\n                alt=\"Logo\"\r\n                style={{ height: \"33px\" }}\r\n              />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n          <Navbar.Collapse\r\n            className=\"justify-content-end\"\r\n            id=\"basic-navbar-nav\"\r\n          >\r\n            <Nav>\r\n              {categories.map((category) => (\r\n                <LinkContainer to={`/categoryproducts/${category.id}`}>\r\n                  <Nav.Link id=\"basic-nav-dropdown\">{category.name}</Nav.Link>\r\n                </LinkContainer>\r\n              ))}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n\r\n          <Navbar.Collapse\r\n            id=\"basic-navbar-nav\"\r\n            className=\"justify-content-end bottom_nav\"\r\n          >\r\n            {/* <SearchBox /> */}\r\n\r\n            <Nav className=\"main_icons \">\r\n              <LinkContainer to=\"/search\">\r\n                <Nav.Link>\r\n                  <i className=\"far fa-search icon_size mr-4\"></i>{\" \"}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fal fa-cart-plus icon_size mx-2\"></i>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  <LinkContainer to=\"/userpanal\">\r\n                    <Nav.Link>\r\n                      <i className=\"fal fa-user icon_size mx-2\"></i>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                  <Link onClick={logoutHandler}>\r\n                    <Nav.Link>\r\n                      <i className=\"far fa-sign-out-alt icon_size mx-2\"></i>\r\n                    </Nav.Link>\r\n                  </Link>\r\n                </>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fal fa-user icon_size mx-2\"></i>\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {/* <DarkMode /> */}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <LinkContainer to=\"/admin/adminpanal\">\r\n                  <Nav.Link>\r\n                    <i className=\"fal fa-user-shield icon_size\"></i>{\" \"}\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n                // <NavDropdown\r\n                //   className=\"dropdown-toggle-split\"\r\n                //   title={<i className=\"fal fa-user-shield icon_size\"></i>}\r\n                //   id=\"adminmenue\"\r\n                // >\r\n                //   <LinkContainer to=\"/admin/userlist\">\r\n                //     <NavDropdown.Item>Users</NavDropdown.Item>\r\n                //   </LinkContainer>\r\n\r\n                //   <LinkContainer to=\"/admin/productlist\">\r\n                //     <NavDropdown.Item>Products</NavDropdown.Item>\r\n                //   </LinkContainer>\r\n\r\n                //   <LinkContainer to=\"/admin/orderlist\">\r\n                //     <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                //   </LinkContainer>\r\n                //   <LinkContainer to=\"/admin/returnslist\">\r\n                //     <NavDropdown.Item>Returns</NavDropdown.Item>\r\n                //   </LinkContainer>\r\n                // </NavDropdown>\r\n              )}\r\n\r\n              {/* <DarkMode /> */}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\ReturnsPages\\ReturnCreatePage.jsx",["311","312","313","314","315"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport { createReturn } from \"../../actions/productActions\";\r\n\r\nfunction ReturnCreatePage({ location, history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [productname, setProductName] = useState(\"\");\r\n  const [issue, setIssue] = useState(\"\");\r\n  const [ordernumber, setOrderNumber] = useState(\"\");\r\n  const [phonenumber, setPhonenumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const returnCreate = useSelector((state) => state.returnCreate);\r\n  const { success: successCreate } = returnCreate;\r\n  if (successCreate) {\r\n    dispatch({ type: \"RETURN_CREATE_RESET\" });\r\n    history.push(\"/myreturns\");\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createReturn(title, productname, issue, ordernumber, phonenumber));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-5\">\r\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\r\n          <h3 className=\" text-success mt-1 p-1 text-center \">\r\n            File Return Request\r\n          </h3>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Complain\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phonenumber\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Complain\"\r\n                value={phonenumber}\r\n                onChange={(e) => setPhonenumber(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"productname\">\r\n              <Form.Label>Product Name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Product Name\"\r\n                value={productname}\r\n                onChange={(e) => setProductName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"ordernumber\">\r\n              <Form.Label> Order Number</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"number\"\r\n                placeholder=\"Enter Order Number\"\r\n                min=\"0\"\r\n                value={ordernumber}\r\n                onChange={(e) => setOrderNumber(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"issue\">\r\n              <Form.Label>Details</Form.Label>\r\n              <Form.Control\r\n                required\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"Enter Details\"\r\n                min=\"0\"\r\n                value={issue}\r\n                onChange={(e) => setIssue(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"w-100 text-success btn_color\"\r\n            >\r\n              File Return\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ReturnCreatePage;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Footer.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\pages\\SearchPage.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Loader.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Message.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Product.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\ProductCarousel.jsx",["316"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\nimport Slider from \"react-slick\";\r\nimport Product from \"./Product\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nfunction ProductCarousel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { error, loading, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n  var settings = {\r\n    dots: true,\r\n    arrows: false,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 1000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    initialSlide: 0,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Slider {...settings}>\r\n      {products.map((product) => (\r\n        <Product product={product} />\r\n      ))}\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\FormContainer.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\LatestProductsCarousel.jsx",["317","318","319"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { listLatestProducts } from \"../actions/productActions\";\r\nimport Slider from \"react-slick\";\r\nimport Product from \"./Product\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nfunction LatestProductsCarousel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const latestProducts = useSelector((state) => state.latestProducts);\r\n  const { error, loading, products } = latestProducts;\r\n\r\n  useEffect(() => {\r\n    dispatch(listLatestProducts());\r\n  }, [dispatch]);\r\n  var settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 1000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    initialSlide: 0,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Slider {...settings}>\r\n      {products.map((product) => (\r\n        <Product product={product} />\r\n      ))}\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default LatestProductsCarousel;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CarouselSlider.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\Rating.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\productActions.jsx",["320"],"import axios from \"axios\";\r\n\r\nexport const listProducts =\r\n  (name = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"PRODUCT_LIST_REQUEST\" });\r\n\r\n      const { data } = await axios.get(`/product/api/products/${name}`);\r\n\r\n      dispatch({ type: \"PRODUCT_LIST_SUCCESS\", payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"PRODUCT_LIST_FAIL\",\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const listCategory = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"CATEGORY_LIST_REQUEST\" });\r\n\r\n    const { data } = await axios.get(`/product/api/categories`);\r\n\r\n    dispatch({ type: \"CATEGORY_LIST_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"CATEGORY_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"PRODUCT_TOP_REQUEST\" });\r\n\r\n    const { data } = await axios.get(`/product/api/products/top/`);\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_TOP_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_TOP_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listLatestProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"LATEST_PRODUCTS_REQUEST\" });\r\n\r\n    const { data } = await axios.get(`/product/api/products/latest/`);\r\n\r\n    dispatch({\r\n      type: \"LATEST_PRODUCTS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"LATEST_PRODUCTS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"PRODUCT_DETAILS_REQUEST\" });\r\n\r\n    const { data } = await axios.get(`/product/api/product/${id}`);\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_DETAILS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_DETAILS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"PRODUCT_DELETE_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(\r\n      `/product/api/product/delete/${id}/`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_DELETE_SUCCESS\",\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_DELETE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"PRODUCT_CREATE_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/product/api/products/create/`,\r\n      {},\r\n      config\r\n    );\r\n    dispatch({\r\n      type: \"PRODUCT_CREATE_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_CREATE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"PRODUCT_UPDATE_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/product/api/products/update/${product._id}/`,\r\n      product,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: \"PRODUCT_UPDATE_SUCCESS\",\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_DETAILS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_UPDATE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: \"PRODUCT_CREATE_REVIEW_REQUEST\",\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/product/api/products/${productId}/reviews/`,\r\n        review,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: \"PRODUCT_CREATE_REVIEW_SUCCESS\",\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"PRODUCT_CREATE_REVIEW_FAIL\",\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Returns:\r\n\r\nexport const listReturns = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"RETURNS_LIST_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/product/api/returns/`, config);\r\n    dispatch({\r\n      type: \"RETURNS_LIST_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"RETURNS_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listMyReturnsFunction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"LIST_MY_RETURNS_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/product/api/myreturns/`, config);\r\n    dispatch({\r\n      type: \"LIST_MY_RETURNS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"LIST_MY_RETURNS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const getReturnsDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"RETURNS_DETAILS_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/product/api/returns/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: \"RETURNS_DETAILS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"RETURNS_DETAILS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const issueStatus = (returns) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"ISSUE_STATE_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/product/api/returns/${returns.id}/update/`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: \"ISSUE_STATE_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"ISSUE_STATE_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createReturn =\r\n  (title, productname, issue, ordernumber, phonenumber) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: \"RETURN_CREATE_REQUEST\",\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/product/api/returns/create/`,\r\n        {\r\n          title: title,\r\n          productname: productname,\r\n          issue: issue,\r\n          ordernumber: ordernumber,\r\n          phonenumber: phonenumber,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: \"RETURN_CREATE_SUCCESS\",\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"RETURN_CREATE_FAIL\",\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n// ==========================================================\r\n// Categories\r\n\r\nexport const listCategories = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"CATEGORIES_LIST_REQUEST\",\r\n    });\r\n\r\n    const { data } = await axios.get(`/product/api/categories/`);\r\n    dispatch({\r\n      type: \"CATEGORIES_LIST_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"CATEGORIES_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductByCategory =\r\n  (id, name = \"\") =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: \"PRODUCT_CATEGORY_LIST_REQUEST\",\r\n      });\r\n\r\n      const { data } = await axios.get(\r\n        `/product/api/products/category/${id}/${name}`\r\n      );\r\n\r\n      dispatch({\r\n        type: \"PRODUCT_CATEGORY_LIST_SUCCESS\",\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"PRODUCT_CATEGORY_LIST_FAIL\",\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n// ==========================================================\r\n// Sub Categories\r\n\r\nexport const listSubCategories = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SUB_CATEGORY_LIST_REQUEST\",\r\n    });\r\n\r\n    const { data } = await axios.get(`/product/api/sub_categories/`);\r\n    dispatch({\r\n      type: \"SUB_CATEGORY_LIST_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"SUB_CATEGORY_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductBySubCategory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"PRODUCT_SUB_CATEGORY_LIST_REQUEST\",\r\n    });\r\n\r\n    const { data } = await axios.get(\r\n      `/product/api/products/subcategory/${id}/`\r\n    );\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_SUB_CATEGORY_LIST_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_SUB_CATEGORY_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Brands:\r\n\r\nexport const listBrandsFunction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"BRAND_LIST_REQUEST\",\r\n    });\r\n\r\n    const { data } = await axios.get(`/product/api/brands/`);\r\n    dispatch({\r\n      type: \"BRAND_LIST_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"BRAND_LIST_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBrandDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: \"BRAND_DETAILS_REQUEST\",\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/product/api/brand/${id}`, config);\r\n    dispatch({\r\n      type: \"BRAND_DETAILS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"BRAND_DETAILS_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductByBrand = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"PRODUCT_BY_BRAND_REQUEST\",\r\n    });\r\n\r\n    const { data } = await axios.get(`/product/api/brand/${id}/products`);\r\n\r\n    dispatch({\r\n      type: \"PRODUCT_BY_BRAND_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PRODUCT_BY_BRAND_FAIL\",\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// export const addBrandFunction = (name, img) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: \"BRAND_ADD_REQUEST\",\r\n//     });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-type\": \"application/json\",\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(\r\n//       `/product/api/brands/create/`,\r\n//       {\r\n//         name: name,\r\n//         img: img,\r\n//       },\r\n//       config\r\n//     );\r\n\r\n//     dispatch({\r\n//       type: \"BRAND_ADD_SUCCESS\",\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: \"BRAND_ADD_FAIL\",\r\n//       payload:\r\n//         error.response && error.response.data.detail\r\n//           ? error.response.data.detail\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\userActions.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\orderActions.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CatSlider.jsx",["321","322"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport { listCategories } from \"../actions/productActions\";\r\n\r\nexport default function CarouselSlider() {\r\n  const dispatch = useDispatch();\r\n\r\n  const categoriesList = useSelector((state) => state.categoriesList);\r\n  const { categories } = categoriesList;\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n  }, [dispatch]);\r\n  if (!categories) return null;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"container\" className=\"position-relative\">\r\n        {categories.map((category) => (\r\n          <Col xs={12} sm={6} lg={3}>\r\n            <a href={`/categoryproducts/${category.id}`}>\r\n              <img\r\n                className=\"d-block w-100 carousel_img mb-4\"\r\n                src={category.img}\r\n                alt=\"First slide\"\r\n              />\r\n              <div class=\"middle\">\r\n                <div class=\"text\">{category.name}</div>\r\n              </div>\r\n            </a>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\SearchBox.jsx",["323"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBox() {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (name) {\r\n      history.push(`/search?name=${name}`);\r\n    } else {\r\n      history.push(history.push(history.location.pathname));\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <div className=\"justify-contnet-center text-center my-2 d-flex\">\r\n        <input\r\n          className=\"form-control w-80\"\r\n          type=\"text\"\r\n          name=\"q\"\r\n          placeholder=\"search\"\r\n          onChange={(event) => setName(event.target.value)}\r\n        />\r\n        <button className=\"btn btn-outline-primary\">\r\n          <i className=\"fas fa-search \"></i>\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\components\\CheckoutSteps.jsx",[],"E:\\Amr\\ecommerce_project\\FinalProject\\frontend\\src\\actions\\cartActions.jsx",[],{"ruleId":"324","severity":1,"message":"325","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":26},{"ruleId":"324","severity":1,"message":"328","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":23},{"ruleId":"324","severity":1,"message":"329","line":4,"column":3,"nodeType":"326","messageId":"327","endLine":4,"endColumn":8},{"ruleId":"324","severity":1,"message":"330","line":5,"column":3,"nodeType":"326","messageId":"327","endLine":5,"endColumn":9},{"ruleId":"324","severity":1,"message":"331","line":10,"column":3,"nodeType":"326","messageId":"327","endLine":10,"endColumn":16},{"ruleId":"324","severity":1,"message":"332","line":12,"column":23,"nodeType":"326","messageId":"327","endLine":12,"endColumn":34},{"ruleId":"324","severity":1,"message":"333","line":13,"column":8,"nodeType":"326","messageId":"327","endLine":13,"endColumn":14},{"ruleId":"324","severity":1,"message":"334","line":14,"column":8,"nodeType":"326","messageId":"327","endLine":14,"endColumn":15},{"ruleId":"324","severity":1,"message":"335","line":15,"column":10,"nodeType":"326","messageId":"327","endLine":15,"endColumn":24},{"ruleId":"324","severity":1,"message":"336","line":17,"column":10,"nodeType":"326","messageId":"327","endLine":17,"endColumn":14},{"ruleId":"324","severity":1,"message":"337","line":20,"column":9,"nodeType":"326","messageId":"327","endLine":20,"endColumn":17},{"ruleId":"324","severity":1,"message":"338","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":13},{"ruleId":"324","severity":1,"message":"339","line":3,"column":15,"nodeType":"326","messageId":"327","endLine":3,"endColumn":18},{"ruleId":"324","severity":1,"message":"340","line":4,"column":8,"nodeType":"326","messageId":"327","endLine":4,"endColumn":15},{"ruleId":"324","severity":1,"message":"333","line":5,"column":8,"nodeType":"326","messageId":"327","endLine":5,"endColumn":14},{"ruleId":"324","severity":1,"message":"334","line":6,"column":8,"nodeType":"326","messageId":"327","endLine":6,"endColumn":15},{"ruleId":"324","severity":1,"message":"341","line":16,"column":11,"nodeType":"326","messageId":"327","endLine":16,"endColumn":16},{"ruleId":"324","severity":1,"message":"342","line":16,"column":18,"nodeType":"326","messageId":"327","endLine":16,"endColumn":25},{"ruleId":"324","severity":1,"message":"343","line":16,"column":27,"nodeType":"326","messageId":"327","endLine":16,"endColumn":35},{"ruleId":"324","severity":1,"message":"344","line":8,"column":10,"nodeType":"326","messageId":"327","endLine":8,"endColumn":23},{"ruleId":"324","severity":1,"message":"345","line":2,"column":16,"nodeType":"326","messageId":"327","endLine":2,"endColumn":26},{"ruleId":"324","severity":1,"message":"344","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":21},{"ruleId":"324","severity":1,"message":"325","line":1,"column":27,"nodeType":"326","messageId":"327","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"344","line":4,"column":8,"nodeType":"326","messageId":"327","endLine":4,"endColumn":21},{"ruleId":"324","severity":1,"message":"325","line":1,"column":27,"nodeType":"326","messageId":"327","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"344","line":4,"column":8,"nodeType":"326","messageId":"327","endLine":4,"endColumn":21},{"ruleId":"324","severity":1,"message":"346","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":13},{"ruleId":"324","severity":1,"message":"347","line":2,"column":17,"nodeType":"326","messageId":"327","endLine":2,"endColumn":25},{"ruleId":"324","severity":1,"message":"339","line":3,"column":23,"nodeType":"326","messageId":"327","endLine":3,"endColumn":26},{"ruleId":"324","severity":1,"message":"347","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"348","severity":1,"message":"349","line":38,"column":6,"nodeType":"350","endLine":38,"endColumn":24,"suggestions":"351"},{"ruleId":"324","severity":1,"message":"347","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"352","line":21,"column":20,"nodeType":"326","messageId":"327","endLine":21,"endColumn":30},{"ruleId":"324","severity":1,"message":"353","line":24,"column":20,"nodeType":"326","messageId":"327","endLine":24,"endColumn":34},{"ruleId":"324","severity":1,"message":"347","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"354","line":20,"column":14,"nodeType":"326","messageId":"327","endLine":20,"endColumn":34},{"ruleId":"324","severity":1,"message":"355","line":21,"column":12,"nodeType":"326","messageId":"327","endLine":21,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":47,"column":39,"nodeType":"358","messageId":"359","endLine":47,"endColumn":41},{"ruleId":"324","severity":1,"message":"336","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":14},{"ruleId":"348","severity":1,"message":"360","line":42,"column":6,"nodeType":"350","endLine":42,"endColumn":44,"suggestions":"361"},{"ruleId":"324","severity":1,"message":"347","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"336","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":14},{"ruleId":"324","severity":1,"message":"362","line":5,"column":10,"nodeType":"326","messageId":"327","endLine":5,"endColumn":18},{"ruleId":"324","severity":1,"message":"334","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":15},{"ruleId":"324","severity":1,"message":"333","line":8,"column":8,"nodeType":"326","messageId":"327","endLine":8,"endColumn":14},{"ruleId":"324","severity":1,"message":"342","line":14,"column":11,"nodeType":"326","messageId":"327","endLine":14,"endColumn":18},{"ruleId":"324","severity":1,"message":"341","line":14,"column":20,"nodeType":"326","messageId":"327","endLine":14,"endColumn":25},{"ruleId":"324","severity":1,"message":"347","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"330","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":16},{"ruleId":"324","severity":1,"message":"339","line":2,"column":23,"nodeType":"326","messageId":"327","endLine":2,"endColumn":26},{"ruleId":"324","severity":1,"message":"329","line":2,"column":28,"nodeType":"326","messageId":"327","endLine":2,"endColumn":33},{"ruleId":"324","severity":1,"message":"328","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":23},{"ruleId":"324","severity":1,"message":"363","line":16,"column":14,"nodeType":"326","messageId":"327","endLine":16,"endColumn":28},{"ruleId":"324","severity":1,"message":"364","line":17,"column":12,"nodeType":"326","messageId":"327","endLine":17,"endColumn":24},{"ruleId":"324","severity":1,"message":"365","line":23,"column":20,"nodeType":"326","messageId":"327","endLine":23,"endColumn":33},{"ruleId":"324","severity":1,"message":"366","line":23,"column":42,"nodeType":"326","messageId":"327","endLine":23,"endColumn":53},{"ruleId":"324","severity":1,"message":"328","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":23},{"ruleId":"324","severity":1,"message":"339","line":5,"column":29,"nodeType":"326","messageId":"327","endLine":5,"endColumn":32},{"ruleId":"324","severity":1,"message":"330","line":2,"column":20,"nodeType":"326","messageId":"327","endLine":2,"endColumn":26},{"ruleId":"324","severity":1,"message":"367","line":3,"column":34,"nodeType":"326","messageId":"327","endLine":3,"endColumn":45},{"ruleId":"324","severity":1,"message":"368","line":3,"column":47,"nodeType":"326","messageId":"327","endLine":3,"endColumn":48},{"ruleId":"324","severity":1,"message":"369","line":19,"column":9,"nodeType":"326","messageId":"327","endLine":19,"endColumn":21},{"ruleId":"324","severity":1,"message":"370","line":22,"column":9,"nodeType":"326","messageId":"327","endLine":22,"endColumn":21},{"ruleId":"348","severity":1,"message":"360","line":46,"column":6,"nodeType":"350","endLine":46,"endColumn":8,"suggestions":"371"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":27,"nodeType":"326","messageId":"327","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"336","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":14},{"ruleId":"324","severity":1,"message":"333","line":5,"column":8,"nodeType":"326","messageId":"327","endLine":5,"endColumn":14},{"ruleId":"324","severity":1,"message":"334","line":6,"column":8,"nodeType":"326","messageId":"327","endLine":6,"endColumn":15},{"ruleId":"324","severity":1,"message":"344","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":21},{"ruleId":"324","severity":1,"message":"336","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":14},{"ruleId":"324","severity":1,"message":"336","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":14},{"ruleId":"324","severity":1,"message":"372","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":18},{"ruleId":"324","severity":1,"message":"373","line":4,"column":20,"nodeType":"326","messageId":"327","endLine":4,"endColumn":25},{"ruleId":"324","severity":1,"message":"374","line":118,"column":13,"nodeType":"326","messageId":"327","endLine":118,"endColumn":17},{"ruleId":"324","severity":1,"message":"328","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":23},{"ruleId":"375","severity":1,"message":"376","line":21,"column":34,"nodeType":"377","messageId":"378","endLine":21,"endColumn":63},{"ruleId":"324","severity":1,"message":"336","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":14},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'ListGroupItem' is defined but never used.","'useSelector' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'listCategories' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Product' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'products' is assigned a value but never used.","'FormContainer' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["379"],"'loadingPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'subcategoriesLoading' is assigned a value but never used.","'subcategoriesError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["380"],"'payOrder' is defined but never used.","'loadingReturns' is assigned a value but never used.","'errorReturns' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'NavDropdown' is defined but never used.","'L' is defined but never used.","'showDropdown' is assigned a value but never used.","'hideDropdown' is assigned a value but never used.",["381"],"'Carousel' is defined but never used.","'Image' is defined but never used.","'data' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"388","text":"389"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch]",{"range":"392","text":"393"},[1204,1222],"[success, history, order._id, dispatch]",[1378,1416],"[user, userId, successUpdate, history, dispatch]",[1520,1522],"[dispatch]"]