[{"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/index.jsx":"1","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reportWebVitals.js":"2","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/App.jsx":"3","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/store.jsx":"4","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Footer.jsx":"5","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Header.jsx":"6","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/orderReducers.jsx":"7","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/userReducers.jsx":"8","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/cartReducers.jsx":"9","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnCreatePage.jsx":"10","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserPanal/UserPanal.jsx":"11","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/categorySelect.jsx":"12","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnsListPage.jsx":"13","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/productReducers.jsx":"14","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnDetailsPage.jsx":"15","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/MyReturnsPage.jsx":"16","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/HomePage.jsx":"17","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/ContactUsPage.jsx":"18","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/LoginPage.jsx":"19","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UpdateProfilePage.jsx":"20","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserListPage.jsx":"21","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/SearchPage.jsx":"22","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/BrandListPage.jsx":"23","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/ProfilePage.jsx":"24","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/ActivationPage.jsx":"25","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductCreatePage.jsx":"26","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserEditPage.jsx":"27","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/RegisterPage.jsx":"28","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductListPage.jsx":"29","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/SubCategoryPage.jsx":"30","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductEditPage.jsx":"31","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/CartPage.jsx":"32","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductPage.jsx":"33","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/CategoryPage.jsx":"34","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/ShippingPage.jsx":"35","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductImageAddPage.jsx":"36","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/PlaceOrderPage.jsx":"37","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/OrderPage.jsx":"38","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/OrderListPage.jsx":"39","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/PaymentPage.jsx":"40","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/MyOrdersPage.jsx":"41","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/BrandDetailsPage.jsx":"42","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/AddBrandPage.jsx":"43","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/AdminPages/AdminPanalPage/AdminPanalPage.jsx":"44","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Message.jsx":"45","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/FormContainer.jsx":"46","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/userActions.jsx":"47","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/orderActions.jsx":"48","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/ProductCarousel.jsx":"49","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/LatestProductsCarousel.jsx":"50","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Loader.jsx":"51","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/productActions.jsx":"52","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CatSlider.jsx":"53","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Product.jsx":"54","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CheckoutSteps.jsx":"55","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/cartActions.jsx":"56","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CarouselSlider.jsx":"57","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Rating.jsx":"58","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/SearchBox.jsx":"59"},{"size":385,"mtime":1640369512762,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":1639424200632,"results":"62","hashOfConfig":"61"},{"size":5164,"mtime":1640874758270,"results":"63","hashOfConfig":"61"},{"size":3514,"mtime":1640874758286,"results":"64","hashOfConfig":"61"},{"size":3663,"mtime":1640724630635,"results":"65","hashOfConfig":"61"},{"size":5481,"mtime":1640724651453,"results":"66","hashOfConfig":"61"},{"size":2928,"mtime":1640163963737,"results":"67","hashOfConfig":"61"},{"size":2945,"mtime":1640163963737,"results":"68","hashOfConfig":"61"},{"size":1100,"mtime":1640017674968,"results":"69","hashOfConfig":"61"},{"size":3681,"mtime":1640724391237,"results":"70","hashOfConfig":"61"},{"size":4394,"mtime":1640530314683,"results":"71","hashOfConfig":"61"},{"size":2612,"mtime":1640517003414,"results":"72","hashOfConfig":"61"},{"size":2644,"mtime":1640605703621,"results":"73","hashOfConfig":"61"},{"size":10425,"mtime":1640874758286,"results":"74","hashOfConfig":"61"},{"size":6583,"mtime":1640721657173,"results":"75","hashOfConfig":"61"},{"size":2704,"mtime":1640521614593,"results":"76","hashOfConfig":"61"},{"size":1542,"mtime":1640874758282,"results":"77","hashOfConfig":"61"},{"size":632,"mtime":1640874758282,"results":"78","hashOfConfig":"61"},{"size":2736,"mtime":1640874758286,"results":"79","hashOfConfig":"61"},{"size":3967,"mtime":1640874758286,"results":"80","hashOfConfig":"61"},{"size":2919,"mtime":1640874758286,"results":"81","hashOfConfig":"61"},{"size":1706,"mtime":1640874758282,"results":"82","hashOfConfig":"61"},{"size":2098,"mtime":1640721657149,"results":"83","hashOfConfig":"61"},{"size":2092,"mtime":1640874758286,"results":"84","hashOfConfig":"61"},{"size":668,"mtime":1640874758286,"results":"85","hashOfConfig":"61"},{"size":6839,"mtime":1640874758286,"results":"86","hashOfConfig":"61"},{"size":3159,"mtime":1640874758286,"results":"87","hashOfConfig":"61"},{"size":3793,"mtime":1640874758286,"results":"88","hashOfConfig":"61"},{"size":3895,"mtime":1640874758286,"results":"89","hashOfConfig":"61"},{"size":1383,"mtime":1640874758286,"results":"90","hashOfConfig":"61"},{"size":9652,"mtime":1640874758286,"results":"91","hashOfConfig":"61"},{"size":4513,"mtime":1640874758282,"results":"92","hashOfConfig":"61"},{"size":10484,"mtime":1640874758286,"results":"93","hashOfConfig":"61"},{"size":2725,"mtime":1640874758286,"results":"94","hashOfConfig":"61"},{"size":3091,"mtime":1640874758286,"results":"95","hashOfConfig":"61"},{"size":2744,"mtime":1640874758286,"results":"96","hashOfConfig":"61"},{"size":5056,"mtime":1640874758286,"results":"97","hashOfConfig":"61"},{"size":9274,"mtime":1640874758286,"results":"98","hashOfConfig":"61"},{"size":2720,"mtime":1640874758282,"results":"99","hashOfConfig":"61"},{"size":2334,"mtime":1640874758286,"results":"100","hashOfConfig":"61"},{"size":2851,"mtime":1640874758282,"results":"101","hashOfConfig":"61"},{"size":1739,"mtime":1640721657137,"results":"102","hashOfConfig":"61"},{"size":2861,"mtime":1640874758270,"results":"103","hashOfConfig":"61"},{"size":4732,"mtime":1640874758270,"results":"104","hashOfConfig":"61"},{"size":190,"mtime":1640205487337,"results":"105","hashOfConfig":"61"},{"size":338,"mtime":1640017674844,"results":"106","hashOfConfig":"61"},{"size":5804,"mtime":1640163963697,"results":"107","hashOfConfig":"61"},{"size":4585,"mtime":1640017674780,"results":"108","hashOfConfig":"61"},{"size":1627,"mtime":1640639614472,"results":"109","hashOfConfig":"61"},{"size":1676,"mtime":1640639624878,"results":"110","hashOfConfig":"61"},{"size":401,"mtime":1640874758270,"results":"111","hashOfConfig":"61"},{"size":15165,"mtime":1640874758270,"results":"112","hashOfConfig":"61"},{"size":1193,"mtime":1640961932857,"results":"113","hashOfConfig":"61"},{"size":886,"mtime":1640639290845,"results":"114","hashOfConfig":"61"},{"size":1241,"mtime":1640207621424,"results":"115","hashOfConfig":"61"},{"size":1075,"mtime":1640017674780,"results":"116","hashOfConfig":"61"},{"size":1122,"mtime":1640537650230,"results":"117","hashOfConfig":"61"},{"size":1497,"mtime":1640109446709,"results":"118","hashOfConfig":"61"},{"size":972,"mtime":1640722553775,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"5nxbzv",{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"122"},"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/index.jsx",[],["266","267"],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reportWebVitals.js",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/App.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/store.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Footer.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Header.jsx",["268","269","270","271","272"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, NavDropdown, L } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport logo from \"../images/brand.png\";\n// import SearchBox from \"./SearchBox\";\nimport { listCategories } from \"../actions/productActions\";\nimport { Link } from \"react-router-dom\";\n// import DarkMode from \"../DarkMode\";\n\nfunction Header() {\n  const categoriesList = useSelector((state) => state.categoriesList);\n  const { categories } = categoriesList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const [show, setShow] = useState(false);\n  const showDropdown = (e) => {\n    setShow(!show);\n  };\n  const hideDropdown = (e) => {\n    setShow(false);\n  };\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  const [navBackground, setNavBackground] = useState(false);\n  const navRef = useRef();\n  navRef.current = navBackground;\n  useEffect(() => {\n    dispatch(listCategories());\n\n    const handleScroll = () => {\n      const show = window.scrollY > 50;\n      if (navRef.current !== show) {\n        setNavBackground(show);\n      }\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  if (!categories) return null;\n\n  return (\n    <header style={{ marginBottom: \"75px\", alignItems: \"center\" }}>\n      <Navbar\n        expand=\"lg\"\n        collapseOnSelect\n        fixed=\"top\"\n        style={{\n          transition: \".5s ease\",\n          backgroundColor: navBackground ? \"#fff\" : \"transparent\",\n          zIndex: \"1500\",\n          color: \"#232323\",\n        }}\n        className=\"hea\"\n      >\n        <Container fluid className=\"navbar align-items-center\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img\n                src={logo}\n                className=\"logo_img\"\n                alt=\"Logo\"\n                style={{ height: \"33px\" }}\n              />\n            </Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n          <Navbar.Collapse\n            className=\"justify-content-end\"\n            id=\"basic-navbar-nav\"\n          >\n            <Nav>\n              {categories.map((category) => (\n                <LinkContainer to={`/categoryproducts/${category.id}`}>\n                  <Nav.Link id=\"basic-nav-dropdown\">{category.name}</Nav.Link>\n                </LinkContainer>\n              ))}\n            </Nav>\n          </Navbar.Collapse>\n\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            className=\"justify-content-end bottom_nav\"\n          >\n            {/* <SearchBox /> */}\n\n            <Nav className=\"main_icons \">\n              <LinkContainer to=\"/search\">\n                <Nav.Link>\n                  <i className=\"far fa-search icon_size mr-4\"></i>{\" \"}\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fal fa-cart-plus icon_size mx-2\"></i>\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <>\n                  <LinkContainer to=\"/userpanal\">\n                    <Nav.Link>\n                      <i className=\"fal fa-user icon_size mx-2\"></i>\n                    </Nav.Link>\n                  </LinkContainer>\n                  <Link onClick={logoutHandler}>\n                    <Nav.Link>\n                      <i className=\"far fa-sign-out-alt icon_size mx-2\"></i>\n                    </Nav.Link>\n                  </Link>\n                </>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fal fa-user icon_size mx-2\"></i>\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {/* <DarkMode /> */}\n              {userInfo && userInfo.isAdmin && (\n                <LinkContainer to=\"/admin/adminpanal\">\n                  <Nav.Link>\n                    <i className=\"fal fa-user-shield icon_size\"></i>{\" \"}\n                  </Nav.Link>\n                </LinkContainer>\n                // <NavDropdown\n                //   className=\"dropdown-toggle-split\"\n                //   title={<i className=\"fal fa-user-shield icon_size\"></i>}\n                //   id=\"adminmenue\"\n                // >\n                //   <LinkContainer to=\"/admin/userlist\">\n                //     <NavDropdown.Item>Users</NavDropdown.Item>\n                //   </LinkContainer>\n\n                //   <LinkContainer to=\"/admin/productlist\">\n                //     <NavDropdown.Item>Products</NavDropdown.Item>\n                //   </LinkContainer>\n\n                //   <LinkContainer to=\"/admin/orderlist\">\n                //     <NavDropdown.Item>Orders</NavDropdown.Item>\n                //   </LinkContainer>\n                //   <LinkContainer to=\"/admin/returnslist\">\n                //     <NavDropdown.Item>Returns</NavDropdown.Item>\n                //   </LinkContainer>\n                // </NavDropdown>\n              )}\n\n              {/* <DarkMode /> */}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/orderReducers.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/userReducers.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/cartReducers.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnCreatePage.jsx",["273","274","275","276","277"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport FormContainer from \"../../components/FormContainer\";\nimport { createReturn } from \"../../actions/productActions\";\n\nfunction ReturnCreatePage({ location, history }) {\n  const [title, setTitle] = useState(\"\");\n  const [productname, setProductName] = useState(\"\");\n  const [issue, setIssue] = useState(\"\");\n  const [ordernumber, setOrderNumber] = useState(\"\");\n  const [phonenumber, setPhonenumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const returnCreate = useSelector((state) => state.returnCreate);\n  const { success: successCreate } = returnCreate;\n  if (successCreate) {\n    dispatch({ type: \"RETURN_CREATE_RESET\" });\n    history.push(\"/myreturns\");\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createReturn(title, productname, issue, ordernumber, phonenumber));\n  };\n\n  return (\n    <Container>\n      <Row className=\"my-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <h3 className=\" text-success mt-1 p-1 text-center \">\n            File Return Request\n          </h3>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Complain\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"phonenumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Complain\"\n                value={phonenumber}\n                onChange={(e) => setPhonenumber(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"productname\">\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Product Name\"\n                value={productname}\n                onChange={(e) => setProductName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"ordernumber\">\n              <Form.Label> Order Number</Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                placeholder=\"Enter Order Number\"\n                min=\"0\"\n                value={ordernumber}\n                onChange={(e) => setOrderNumber(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"issue\">\n              <Form.Label>Details</Form.Label>\n              <Form.Control\n                required\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Enter Details\"\n                min=\"0\"\n                value={issue}\n                onChange={(e) => setIssue(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"dark\"\n              className=\"w-100 text-success btn_color\"\n            >\n              File Return\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ReturnCreatePage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserPanal/UserPanal.jsx",["278","279","280","281"],"import { Col, Row } from \"react-bootstrap\";\nimport \"./UserPanal.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { listMyReturnsFunction } from \"../../../actions/productActions\";\n\nimport { listMyOrders } from \"../../../actions/orderActions\";\n\nfunction UserPanal({ history }) {\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n  const listMyReturns = useSelector((state) => state.listMyReturns);\n  const {\n    loading: loadingReturns,\n    error: errorReturns,\n    returns,\n  } = listMyReturns;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || userInfo._id !== user._id) {\n        dispatch(listMyOrders());\n        dispatch(listMyReturnsFunction());\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  console.log(userInfo, \"llllllllllllllllllll\");\n  if (!orders) return null;\n  if (!userInfo) return null;\n  if (!returns) return null;\n  return (\n    <div>\n      <h2 className=\"h2\">Profile</h2>\n\n      <div className=\"container\">\n        <Row>\n          <Col md={6}>\n            <div className=\"ad_card bg-success\">\n              <div className=\"card-statistic-3\">\n                <div>\n                  <a href=\"/profile\">\n                    <h2 className=\"ad_card_title d-inline-block pr-1\">\n                      Profile\n                    </h2>\n                    <i class=\"far fa-user-circle text-light ad_icon\"></i>\n                  </a>\n                </div>\n                <div className=\"row align-items-center d-flex\">\n                  <div className=\"col-8\">\n                    <h2 className=\"d-flex align-items-center\">\n                      {userInfo.name}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col md={6}>\n            <div className=\"ad_card bg-warning\">\n              <div className=\"card-statistic-3\">\n                <div>\n                  <a href=\"/myorders\">\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\n                      {\" \"}\n                      Orders\n                    </h2>\n                    <i class=\"far fa-shopping-bag text-light ad_icon\"></i>\n                  </a>\n                </div>\n                <div className=\"row align-items-center d-flex\">\n                  <div className=\"col-8\">\n                    <h2 className=\"d-flex align-items-center\">\n                      {orders.length}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col md={6}>\n            <div className=\"ad_card bg-danger\">\n              <div className=\"card-statistic-3\">\n                <div>\n                  <a href=\"/myreturns\">\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\n                      My Returns\n                    </h2>\n                    <i class=\"far fa-undo-alt text-light ad_icon\"></i>\n                  </a>\n                </div>\n                <div className=\"row align-items-centr d-flex\">\n                  <div className=\"col-8\">\n                    <h2 className=\"d-flex align-items-center\">\n                      {returns.length}\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col md={6}>\n            <div className=\"ad_card bg-info\">\n              <div className=\"card-statistic-3\">\n                <div>\n                  <a href=\"/update\">\n                    {\" \"}\n                    <h2 className=\"ad_card_title d-inline-block pr-2\">\n                      Update Profile\n                    </h2>\n                    <i className=\"far fa-pencil text-light ad_icon\"></i>\n                    <button className=\"btn btn-block btn-light\">Click</button>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default UserPanal;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/categorySelect.jsx",["282","283","284","285","286","287","288","289","290","291","292"],"import React, { useEffect, useState } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  Table,\n  Button,\n  Form,\n  Col,\n  ListGroup,\n  Card,\n  ListGroupItem,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listCategories } from \"../actions/productActions\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction InternalSearch() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [minprice, setMinprice] = useState(\"\");\n  const [maxprice, setMaxprice] = useState(\"\");\n\n  let history = useHistory();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (name) {\n      history.push(\n        `/?name=${name}&price_min=${minprice}&price_max=${maxprice}`\n      );\n    } else {\n      history.push(history.push(history.location.pathname));\n    }\n  };\n\n  return (\n    <div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <Col md={4}>\n        <Card className=\" shadow rounded-sm\" style={{ alignItems: \"center\" }}>\n          <Form onSubmit={submitHandler} inline style={{ marginTop: \"15px\" }}>\n            <ListGroup>\n              <label for=\"search\" class=\"form-label\">\n                Search\n              </label>\n\n              <input\n                className=\"form-control d-inline m-3\"\n                type=\"text\"\n                name=\"q\"\n                placeholder=\"search\"\n                onChange={(event) => setName(event.target.value)}\n              />\n            </ListGroup>\n            <ListGroup>\n              <label for=\"search\" class=\"form-label\">\n                Price\n              </label>\n\n              <div className=\"d-inline\">\n                <input\n                  type=\"text\"\n                  price=\"1\"\n                  style={{ width: \"150px \" }}\n                  className=\" form-control d-inline\"\n                  onChange={(event) => setMinprice(event.target.value)}\n                  placeholder=\"Min Price\"\n                />\n                <input\n                  type=\"text\"\n                  price=\"1\"\n                  style={{ width: \"150px \" }}\n                  className=\" form-control d-inline\"\n                  onChange={(event) => setMaxprice(event.target.value)}\n                  placeholder=\"Max Price\"\n                />\n              </div>\n            </ListGroup>\n          </Form>\n        </Card>\n      </Col>\n    </div>\n  );\n}\n\nexport default InternalSearch;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnsListPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/reducers/productReducers.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/ReturnDetailsPage.jsx",["293","294","295","296","297","298","299"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { payOrder } from \"../../actions/orderActions\";\nimport { getReturnsDetails, issueStatus } from \"../../actions/productActions\";\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\n\nfunction ReturnsDetailsPage({ match, history }) {\n  const dispatch = useDispatch();\n\n  const returnDetails = useSelector((state) => state.returnDetails);\n  const { loading, error, returns } = returnDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch(getReturnsDetails(match.params.id));\n  }, [dispatch, match]);\n  const issueHandler = () => {\n    dispatch(issueStatus(returns));\n  };\n\n  if (!returns) return null;\n  return (\n    <div>\n      <Row className=\"mt-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <Row>\n            <Col>\n              {\" \"}\n              <h1>Return Request No.{returns.id}</h1>\n              <hr />\n              <h4 style={{ textAlign: \"center\" }}> Details </h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <strong> User Name:</strong>\n              <h6 className=\"d-inline\"> {returns.user.name} </h6>\n            </Col>\n            <Col>\n              <strong> Filed at:</strong>\n              <h6 className=\"d-inline\">\n                {returns.created_at.substring(0, 10)}{\" \"}\n              </h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <strong> Product Name :</strong>\n              <h6 className=\"d-inline\"> {returns.product_name} </h6>\n            </Col>\n            <Col>\n              <strong> Order Number :</strong>\n              <h6 className=\"d-inline\"> {returns.order_num} </h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <strong> Complain :</strong>\n              <h6 className=\"d-inline\"> {returns.title} </h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <strong> Details :</strong>\n              <h6 className=\"d-inline\"> {returns.issue} </h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <strong> Issue State :</strong>\n              <h6 className=\"d-inline\">\n                {returns.issue_status ? <i> Solved </i> : <i>Not Solved </i>}\n              </h6>\n            </Col>\n          </Row>\n          <Row>\n            {\" \"}\n            <Col>\n              {userInfo && userInfo.isAdmin && !returns.issue_status && (\n                <Button\n                  variant=\"dark\"\n                  type=\"button\"\n                  className=\"btn btn-block  btn_color\"\n                  onClick={issueHandler}\n                >\n                  Mark As Solved\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default ReturnsDetailsPage;\n\n// function ReturnDetailsPage({ history, match }) {\n//   const returnId = match.params.id;\n//   console.log(returnId, \"+++++++++++++++++++\");\n//   // const returnsDetails = useSelector((state) => state.returnsDetails);\n//   // const { data } = returnsDetails;\n//   const [returns, setReturns] = useState(\"\");\n//   const dispatch = useDispatch();\n\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   useEffect(() => {\n//     const getReturnDetails = (returnId) => async () => {\n//       await axios.get(`/product/api/returns/${returnId}/`).then((response) => {\n//         setReturns(response.data);\n//       });\n//     };\n//     getReturnDetails();\n//     // dispatch(getReturnsDetails(returnId));\n//   }, [dispatch, history, userInfo, returnId, returns]);\n\n//   //   console.log(userInfo.isAdmin, \"userInfo.isAdmin\");\n//   //   console.log(userInfo, \"userInfo\");\n//   console.log(returns, \"returns\");\n//   // if (!returns) return null;\n//   return <div>{/* <div>{returns.title}</div> */}</div>;\n// }\n// export default function ReturnsListPage({ history }) {\n//   const [returns, setReturns] = useState(null);\n//   const dispatch = useDispatch();\n\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   useEffect(() => {\n//     if (userInfo && userInfo.isAdmin) {\n//       axios.get(\"/product/api/returns/\").then((response) => {\n//         setReturns(response.data);\n//       });\n//     } else {\n//       history.push(\"/login\");\n//     }\n//   }, [, history, userInfo]);\n//   //   useEffect(() => {\n//   //     axios.get(\"/product/api/returns/\").then((response) => {\n//   //       setReturns(response.data);\n//   //     });\n//   //   }, []);\n\n//   console.log(userInfo.isAdmin, \"userInfo.isAdmin\");\n//   console.log(userInfo, \"userInfo\");\n//   console.log(returns, \"returns\");\n//   if (!returns) return null;\n//   if (!userInfo && !userInfo.isAdmin) {\n//     return <p>not allowed</p>;\n//   } else {\n//     return (\n//       <div>\n//         <h1>Returns Requests:</h1>\n\n//         <div>\n//           {returns.map((ret) => (\n//             <p>{ret.title}</p>\n//           ))}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function ReturnDetailsPage({ match }) {\n//   const returnId = match.params.id;\n//   const dispatch = useDispatch();\n\n//   //   const orderDetails = useSelector((state) => state.orderDetails);\n//   //   const { order, error, loading } = orderDetails;\n\n//   const returnsDetails = useSelector((state) => state.returnsDetails);\n//   const { returns, error, loading } = returnsDetails;\n\n//   const orderPay = useSelector((state) => state.orderPay);\n//   const { loading: loadingPay, success: successPay } = orderPay;\n\n//   const issueState = useSelector((state) => state.issueState);\n//   const { loading: loadingIssue, success: successIssue } = issueState;\n\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n\n//   useEffect(() => {\n//     if (\n//       !returns ||\n//       returns.id !== Number(returnId) ||\n//       successPay ||\n//       successIssue\n//     ) {\n//       dispatch(getReturnsDetails(returnId));\n//     }\n//   }, [dispatch, returns, returnId, successPay, successIssue]);\n\n//   //   const payHandler = () => {\n//   //     dispatch(payOrder(order));\n//   //   };\n\n//   return (\n//     <div>\n//       <div>{returns.title}</div>\n//     </div>\n//   );\n// }\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ReturnsPages/MyReturnsPage.jsx",["300","301","302","303","304"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Table, Card } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { listMyReturnsFunction } from \"../../actions/productActions\";\n\nfunction MyReturnsPage({ history }) {\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const listMyReturns = useSelector((state) => state.listMyReturns);\n  const {\n    loading: loadingReturns,\n    error: errorReturns,\n    returns,\n  } = listMyReturns;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || userInfo._id !== user._id) {\n        dispatch(listMyReturnsFunction());\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  return (\n    <div className=\"py-5 text-center\" style={{ alignItems: \"center\" }}>\n      <h2 style={{ textAlign: \"center\" }}>My Returns</h2>\n      <Row md={9}>\n        {loadingReturns ? (\n          <Loader />\n        ) : errorReturns ? (\n          <Message variant=\"danger\">{errorReturns}</Message>\n        ) : (\n          <Row>\n            {\" \"}\n            {returns.map((ret) => (\n              <Card md={4} className=\"pt-2 rounded text-center\">\n                <Card.Title style={{ marginTop: \"5px\" }}>\n                  <a\n                    style={{ color: \"black\" }}\n                    href={`/returndetails/${ret.id}`}\n                  >\n                    {\" \"}\n                    <h5>Issue:{ret.title}</h5>\n                  </a>\n                </Card.Title>\n                <Card.Body>\n                  <h6>Details:</h6>\n                  <p>\n                    <strong> {ret.issue}</strong>\n                    <hr />\n                    <strong>Product: </strong>\n                    {ret.product_name}\n                    <hr />\n                    <strong>Order Number: </strong>\n                    {ret.order_num}\n                  </p>\n                </Card.Body>\n                <Card.Footer>\n                  {\" \"}\n                  <strong> Issue State : </strong>\n                  <h6 className=\"d-inline\">\n                    {ret.issue_status ? <i> Solved </i> : <i>Not Solved </i>}\n                  </h6>\n                  <br></br>\n                </Card.Footer>\n              </Card>\n            ))}\n          </Row>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default MyReturnsPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/HomePage.jsx",["305","306","307","308","309","310","311","312"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport Product from \"../../components/Product\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { listProducts } from \"../../actions/productActions\";\nimport ProductCarousel from \"../../components/ProductCarousel\";\nimport LatestProductsCarousel from \"../../components/LatestProductsCarousel\";\nimport CatSlider from \"../../components/CatSlider\";\nimport CarouselSlider from \"../../components/CarouselSlider\";\n\nfunction HomePage({ history }) {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products } = productList;\n\n  let name = history.location.search;\n\n  useEffect(() => {\n    dispatch(listProducts(name));\n  }, [dispatch, name]);\n  return (\n    <>\n      <CarouselSlider />\n\n      <Container style={{ marginTop: \" 20px\" }}>\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1\">\n          Shop By Category\n        </h3>\n        <CatSlider />\n        <hr />\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1\">\n          Top Rated Products\n        </h3>\n        {!name && <ProductCarousel />}\n        <br /> <hr />\n        <h3 style={{ textAlign: \"center\" }} className=\"heading_1 mt-5\">\n          Latest Products\n        </h3>\n        {!name && <LatestProductsCarousel />}\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/ContactUsPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/LoginPage.jsx",["313"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\nimport { FormContainer } from \"../../components/FormContainer\";\n\nfunction LoginPage({ location, history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { error, loading, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(login(email, password));\n  };\n  return (\n    <Container className=\"py-5\">\n      <Row>\n        <Col lg={5} md={6} sm={12} className=\"p-5 m-auto shadow rounded-lg\">\n          <h3 className=\"mt-1 p-2 text-center\">CUSTOMER LOGIN</h3>{\" \"}\n          <Form onSubmit={submitHandler}>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader></Loader>}\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br></br>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br></br>\n            <Button\n              type=\"submit\"\n              variant=\"dark\"\n              className=\"w-100 text-success btn_color\"\n            >\n              LOGLN{\" \"}\n            </Button>\n          </Form>\n          <br></br>\n          <Row>\n            <Col>\n              Don't Have Account ?{\" \"}\n              <Link\n                className=\"btn btn-secondary \"\n                to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\n              >\n                CREATE ACCOUNT\n              </Link>\n            </Col>{\" \"}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UpdateProfilePage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserListPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/MainPages/SearchPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/BrandListPage.jsx",["314","315"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Button, Card, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { listBrandsFunction } from \"../../actions/productActions\";\n\nfunction BrandsListPage({ history }) {\n  const dispatch = useDispatch();\n\n  const listBrands = useSelector((state) => state.listBrands);\n  const { loading, error, brands } = listBrands;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listBrandsFunction());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n  let hist = useHistory();\n\n  return (\n    <div>\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\n        Go Back\n      </Button>\n      <h2>Brands</h2>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {\" \"}\n          {brands.map((brand) => (\n            <Card md={4} className=\"pt-2 rounded text-center\">\n              <Card.Title style={{ marginTop: \"5px\" }}>\n                <a style={{ color: \"black\" }} href={`/brand/${brand.id}`}>\n                  {\" \"}\n                  <h5>{brand.name}</h5>\n                  <hr />\n                </a>\n              </Card.Title>\n              <Card.Body>\n                <a\n                  style={{ color: \"black\" }}\n                  href={`/returndetails/${brand.id}`}\n                >\n                  {\" \"}\n                  <img\n                    src={brand.img}\n                    alt={brand.name}\n                    style={{ width: \"100px\" }}\n                  />\n                </a>{\" \"}\n              </Card.Body>\n            </Card>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default BrandsListPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/ProfilePage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/ActivationPage.jsx",["316","317"],"import React from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction ActivationPage() {\n  return (\n    <Container style={{ marginTop: \"150px\" }}>\n      <Row className=\"mt-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <h3 className=\" text-success mt-1 p-1 text-center \">\n            Please Activate Your Email Then Login\n          </h3>{\" \"}\n          <Link to={\"/\"} className=\"btn btn-outline-primary btn-block\">\n            Head To Home Page\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ActivationPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductCreatePage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/UserEditPage.jsx",["318","319"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport FormContainer from \"../../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../../actions/userActions\";\n\nfunction UserEditPage({ match, history }) {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: \"USER_UPDATE_RESET\" });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  };\n\n  let hist = useHistory();\n  return (\n    <div>\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\n        Go Back\n      </Button>\n      <FormContainer>\n        <h2>Edit User</h2>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" className=\"btn_color\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default UserEditPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/UserPages/RegisterPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductListPage.jsx",["320"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { listProducts, deleteProduct } from \"../../actions/productActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction ProductListPage({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  let hist = useHistory();\n\n  useEffect(() => {\n    dispatch({ type: \"PRODUCT_CREATE_RESET\" });\n\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listProducts());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo, successDelete]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  return (\n    <div>\n      <Button onClick={() => hist.goBack()} className=\"btn btn-light my-3\">\n        Go Back\n      </Button>\n      <Row className=\"align-items-center\">\n        <Col md={9}>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\" md={3}>\n          <Link to=\"/admin/createproduct\">\n            <Button className=\"my-3 btn_color\">\n              <i className=\"fas fa-plus\"></i> Create Product\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>SUB CATEGORY</th>\n                <th>BRAND</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>\n                    <a href={`/product/${product._id}`}>\n                      <strong>{product.name}</strong>\n                    </a>\n                  </td>\n                  <td>{product.price} L.E</td>\n                  <td>{product.category1.name}</td>\n                  <td>{product.subcategory1.name}</td>\n                  <td>{product.brand1.name}</td>\n                  <td>\n                    {\" \"}\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                  <td>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/SubCategoryPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductEditPage.jsx",["321"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport FormContainer from \"../../components/FormContainer\";\nimport {\n  listProductDetails,\n  updateProduct,\n  listOffers,\n} from \"../../actions/productActions\";\n\nfunction ProductEditPage({ match, history }) {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [offer, setOffer] = useState(0);\n\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(0);\n  const [category, setCategory] = useState();\n  const [subCategory, setSubCategory] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [cat, setCat] = React.useState(\"\");\n  const [subcat, setsubCat] = React.useState(\"\");\n  const [getbrand, setGetBrand] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const offersList = useSelector((state) => state.offersList);\n  const { offers } = offersList;\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    const getData = async () => {\n      await axios\n        .get(\"/product/api/categories/\")\n        .then((res) => {\n          setCat(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getData();\n    const getSubCat = async () => {\n      await axios\n        .get(`/product/api/sub_categories/`)\n        .then((res) => {\n          setsubCat(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getSubCat();\n    const getBrand = async () => {\n      await axios\n        .get(`/product/api/brands/`)\n        .then((res) => {\n          setGetBrand(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getBrand();\n    dispatch(listOffers());\n\n    if (successUpdate) {\n      dispatch({ type: \"PRODUCT_UPDATE_RESET\" });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setPrice(product.offer);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setSubCategory(product.subCategory);\n        setStock(product.stock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        offer,\n        brand,\n        category,\n        subCategory,\n        stock,\n        description,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/product/api/products/upload/\",\n        formData,\n        config\n      );\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  if (!cat) return null;\n  if (!subcat) return null;\n  if (!getbrand) return null;\n  if (!offers) return null;\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\">Go Back</Link>\n\n      <Container>\n        <h1 style={{ textAlign: \"center\" }} className=\"h1\">\n          Update Product\n        </h1>\n        <hr /> {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Row className=\"mt-5\">\n            <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <br></br>\n                <Form.Group controlId=\"price\">\n                  <Form.Label>Price</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Enter price\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <br></br>\n                <Form.Group controlId=\"offer\">\n                  <Form.Label>Offer Type</Form.Label>\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => setOffer(e.target.value)}\n                  >\n                    <option>----</option>\n\n                    {offers.map((offer) => (\n                      <option value={offer.id}>{offer.name}</option>\n                    ))}\n                  </select>\n                </Form.Group>\n\n                <br></br>\n                <Form.Group controlId=\"image\">\n                  <Form.Label>Image</Form.Label>\n                  <Form.Control\n                    disabled\n                    type=\"text\"\n                    placeholder=\"Enter image\"\n                    value={image}\n                    onChange={(event) => setImage(event.target.value)}\n                  ></Form.Control>\n                  <br></br>\n                  <Form.File\n                    id=\"image-file\"\n                    custom\n                    label=\"Choose Image\"\n                    onChange={uploadFileHandler}\n                  ></Form.File>\n                  {uploading && <Loader />}\n                </Form.Group>\n                <br></br>\n                <Form.Group controlId=\"brand\">\n                  <Form.Label>Brand</Form.Label>\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => setBrand(e.target.value)}\n                  >\n                    {getbrand.map((brand) => (\n                      <option value={parseInt(brand.id)}>{brand.name}</option>\n                    ))}\n                  </select>\n                </Form.Group>\n                <br></br>\n                <Form.Group controlId=\"stock\">\n                  <Form.Label>Stock</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Enter stock\"\n                    value={stock}\n                    onChange={(e) => setStock(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <br></br>\n\n                <Form.Group controlId=\"category\">\n                  <Form.Label>Category</Form.Label>\n\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => setCategory(e.target.value)}\n                    id=\"category_input\"\n                  >\n                    {cat.map((category) => (\n                      <option value={category.id}>{category.name}</option>\n                    ))}\n                  </select>\n                </Form.Group>\n                <br></br>\n                <Form.Group controlId=\"subCategory\">\n                  <Form.Label>Sub Category</Form.Label>\n\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => setSubCategory(e.target.value)}\n                  >\n                    <option>-----</option>\n                    {subcat.map((subcategory) => (\n                      <optgroup label={subcategory.category1.name}>\n                        <option value={subcategory.id}>\n                          {subcategory.name}\n                        </option>\n                      </optgroup>\n                    ))}\n                  </select>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <br></br>\n                <div style={{ textAlign: \"right\" }}>\n                  <Button type=\"submit\" variant=\"primary\" className=\"btn_color\">\n                    Update Product\n                  </Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        )}\n      </Container>\n    </>\n  );\n}\nexport default ProductEditPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/CartPage.jsx",["322"],"import React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport Message from \"../../components/Message\";\nimport { addToCart, removeFromCart } from \"../../actions/cartActions\";\n\nfunction CartPage({ match, location, history }) {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Container className=\"pt-5\">\n      <Row>\n        <Col md={8} sm={12}>\n          <h3>Shopping Cart</h3>\n          {cartItems.length === 0 ? (\n            <Message variant=\"info\">\n              Your cart is empty <Link to=\"\">Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n\n                    <Col md={2}>{item.price} L.E</Col>\n\n                    <Col md={3} className=\"d-flex justify-content-between my-3\">\n                      <Form.Control\n                        rounded\n                        style={{\n                          border: \"1px solid  #e3e3e3\",\n                          borderRadius: \"11px\",\n                        }}\n                        className=\"mr-3\"\n                        as=\"select\"\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.stock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                      <div>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline-danger\"\n                          onClick={() => removeFromCartHandler(item.product)}\n                        >\n                          <i className=\"fas fa-trash\"></i>\n                        </Button>\n                      </div>\n                    </Col>\n                    {/* \n                    <Col md={1}>\n\n                    </Col> */}\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n\n        <Col md={4} sm={12}>\n          <Card className=\" shadow rounded-sm\">\n            <ListGroup>\n              <ListGroup.Item>\n                <h3\n                  className=\"rounded p-3\"\n                  style={{\n                    fontFamily: \"monospace\",\n                    textAlign: \"center\",\n                    backgroundColor: \"WhiteSmoke\",\n                  }}\n                >\n                  Sub-Total\n                </h3>\n                <hr />\n                <p>\n                  {cartItems.reduce((acc, item) => acc + item.qty, 0)} items\n                </p>\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}{\" \"}\n                L.E\n              </ListGroup.Item>\n            </ListGroup>\n\n            <ListGroup.Item>\n              <Button\n                variant=\"dark\"\n                className=\" text-success w-100 btn_color\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Checkout\n              </Button>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CartPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/CategoryPage.jsx",["323","324","325"],"import React, { useEffect } from \"react\";\nimport { Row, Col, Container, Card } from \"react-bootstrap\";\nimport Product from \"../../components/Product\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getProductByCategory,\n  listSubCategories,\n} from \"../../actions/productActions\";\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\n// import InternalSearch from \"../components/categorySelect\";\n\nfunction CategoryPage({ match, history }) {\n  const dispatch = useDispatch();\n\n  const categoryProducts = useSelector((state) => state.categoryProducts);\n  const { loading, error, products } = categoryProducts;\n  const subcategoriesList = useSelector((state) => state.subcategoriesList);\n  const {\n    loading: subcategoriesLoading,\n    error: subcategoriesError,\n    subcategories,\n  } = subcategoriesList;\n\n  let name = history.location.search;\n  useEffect(() => {\n    dispatch(listSubCategories());\n    dispatch(getProductByCategory(match.params.id, name));\n  }, [dispatch, match, name]);\n\n  if (!products) return null;\n  if (!subcategories) return null;\n\n  return (\n    <div className=\"py-5\">\n      <h2 className=\"h1 heading_1\">{products[0].category1.name}</h2>\n      {loading ? (\n        <Loader></Loader>\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Container>\n          {/* <InternalSearch /> */}\n          <Row md={8}>\n            {subcategories.map((subcategory) => (\n              <p>\n                {subcategory.category == match.params.id && (\n                  <Row sm={12} md={6} lg={4} xl={3}>\n                    <Col className=\"\" style={{ width: \"250px\" }}>\n                      <a\n                        className=\"nav-link\"\n                        href={`/subcategoryproducts/${subcategory.id}`}\n                      >\n                        <Card.Img src={subcategory.img} />\n                        <h5\n                          style={{\n                            textAlign: \"center\",\n                            color: \"black\",\n                            marginTop: \"20px\",\n                          }}\n                        >\n                          {subcategory.name}\n                        </h5>\n                      </a>\n                    </Col>\n                  </Row>\n                )}\n              </p>\n            ))}\n          </Row>\n\n          <h2>All Products</h2>\n\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default CategoryPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/ShippingPage.jsx",["326"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../../actions/cartActions\";\n\nfunction ShippingPage({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [telephoneNumber, setTelephoneNumber] = useState(\n    shippingAddress.telephoneNumber\n  );\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"submit\");\n    dispatch(saveShippingAddress({ address, city, telephoneNumber, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <Container>\n      <CheckoutSteps step1 step2 />\n      <Row className=\"mt-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <h1 className=\" text-succes mt-1 p-1 text-center \">Shipping</h1>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"address\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter address\"\n                value={address ? address : \"\"}\n                onChange={(e) => setAddress(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"city\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter city\"\n                value={city ? city : \"\"}\n                onChange={(e) => setCity(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"telephoneNumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Phone Number\"\n                value={telephoneNumber ? telephoneNumber : \"\"}\n                onChange={(e) => setTelephoneNumber(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"country\">\n              <Form.Label>Government</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter country\"\n                value={country ? country : \"\"}\n                onChange={(e) => setCountry(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"dark\"\n              className=\"w-100 text-success btn_color\"\n            >\n              Continue\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ShippingPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/ProductPages/ProductImageAddPage.jsx",["327","328","329"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport axios from \"axios\";\nimport { listProducts } from \"../../actions/productActions\";\nimport FormContainer from \"../../components/FormContainer\";\n\nfunction ProductImageAddPage({ match, history }) {\n  const dispatch = useDispatch();\n\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  let myvar = products[products.length - 1];\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  const uploadFileHandler = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", myvar._id);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/product/api/products/upload/\",\n        formData,\n        config\n      );\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n  const submitHandler = () => {\n    history.push(\"/admin/productlist\");\n  };\n\n  if (!myvar) return null;\n  if (!products) return null;\n  return (\n    <Container>\n      {\" \"}\n      <h1 style={{ textAlign: \"center\" }} className=\"h1\">\n        Add Product Image\n      </h1>\n      <hr />\n      <Row className=\"mt-5\">\n        {\" \"}\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                disabled\n                type=\"text\"\n                placeholder=\"Enter image\"\n                value={image}\n                onChange={(event) => setImage(event.target.value)}\n              ></Form.Control>\n              <br></br>\n              <Form.File\n                id=\"image-file\"\n                custom\n                label=\"Choose Image\"\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n            <div style={{ textAlign: \"right\" }}>\n              <Button type=\"submit\" variant=\"primary\" className=\"btn_color\">\n                Add Proudct\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ProductImageAddPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/PlaceOrderPage.jsx",["330","331"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../../actions/orderActions\";\nimport Message from \"../../components/Message\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\n\nfunction PlaceOrderPage({ history }) {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((sum, item) => sum + item.price * item.qty, 0)\n    .toFixed(2);\n\n  if (cart.itemsPrice > 500) {\n    (cart.shippingPrice = 0).toFixed(2);\n  } else {\n    (cart.shippingPrice = 50).toFixed(2);\n  }\n  cart.totalPrice = (\n    Number(cart.shippingPrice) + Number(cart.itemsPrice)\n  ).toFixed(2);\n\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: \"ORDER_CREATE_RESET\" });\n    }\n  }, [success, history]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n  return (\n    <div className=\"py-5\">\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Row>\n        <Col md={8}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h4>Shipping Address: </h4>\n                <p>Phone Number: {cart.shippingAddress.telephoneNumber}</p>\n                <p>\n                  {\" \"}\n                  {cart.shippingAddress.address} , {cart.shippingAddress.city},{\" \"}\n                  {cart.shippingAddress.country} , Egypt.{\" \"}\n                </p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h4>Payment Method</h4>\n                <p> {cart.paymentMethod}</p>\n              </ListGroup.Item>\n            </ListGroup>\n\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h4>Items</h4>\n                {cart.cartItems.length === 0 ? (\n                  <Message variant=\"info\">Your Cart Is Empty</Message>\n                ) : (\n                  <ListGroup variant=\"flush\">\n                    {cart.cartItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col>\n                            {item.qty} X {item.price} L.E ={\" \"}\n                            {(item.qty * item.price).toFixed(2)} L.E\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card className=\"shadow rounded-sm\">\n            <ListGroup variant=\"secondary\">\n              <ListGroup.Item>\n                <h3> Total</h3>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>ItemsPrice:</Col>\n                <Col>{cart.itemsPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>Shipping:</Col>\n                <Col>{cart.shippingPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Col>Total:</Col>\n                <Col>{cart.totalPrice} L.E</Col>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  variant=\"dark\"\n                  type=\"button\"\n                  className=\"btn text-success w-100 btn_color\"\n                  disapled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Place Ordrer\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/OrderPage.jsx",["332","333","334","335"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getOrderDetails,\n  deliverOrder,\n  payOrder,\n} from \"../../actions/orderActions\";\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport axios from \"axios\";\n\nfunction OrderPage({ match }) {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((sum, item) => sum + item.price * item.quantity, 0)\n      .toFixed(2);\n  }\n\n  const [paymob, setPaymob] = useState(\"\");\n\n  useEffect(() => {\n    // const getData = (orderId) => async () => {\n    //   await axios\n    //     .get(`/order/api/payment/${orderId}/`)\n    //     .then((res) => {\n    //       setPaymob(res.data);\n    //       console.log(res);\n    //       console.log('paymob');\n    //     })\n    //     .catch((err) => {\n    //       console.log(err);\n    //     });\n    // };\n\n    if (\n      !order ||\n      order._id !== Number(orderId) ||\n      successDeliver ||\n      successPay\n    ) {\n      dispatch({ type: \"ORDER_PAY_RESET\" });\n      dispatch({ type: \"ORDER_DELIVER_RESET\" });\n      dispatch(getOrderDetails(orderId));\n      // dispatch(getData(orderId));\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  const payHandler = () => {\n    dispatch(payOrder(order));\n  };\n  console.log(paymob, \"paypaupaupauaaopdaodas\");\n\n  if (loading) {\n    return <Loader />;\n  } else if (error) {\n    return <Message variant=\"danger\">{error}</Message>;\n  } else {\n    return (\n      <div className=\"py-5\">\n        <Message variant=\"success\">\n          <p> order placed successfully &#10004; </p>\n        </Message>\n        <Row>\n          <Col md={8}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping Address</h2>\n                  <p>\n                    <span>Name: </span>\n                    {order.user.name}\n                  </p>\n                  <p>Phone Number: {order.shippingAddress.telephone_number}</p>\n                  <p>\n                    {order.shippingAddress.address} ,{\" \"}\n                    {order.shippingAddress.city},{\" \"}\n                    {order.shippingAddress.country} , Egypt.\n                  </p>\n                  {order.is_delivered ? (\n                    <Message variant=\"success\">\n                      Deliverd at {order.delivered_at.substring(0, 10)}\n                    </Message>\n                  ) : (\n                    <Message variant=\"warning\">Not Deliverd</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  {order.payment_method === \"paymob\" ? (\n                    <Row>\n                      <Col>\n                        {\" \"}\n                        {order.payment_method}\n                        <br />\n                        {/* <button\n                          value=\"Paymob\"\n                          className=\"btn disabled text-success btn_color\"\n                          onclick={window.open(\n                            `http://127.0.0.1:8000/order/api/payment/${orderId}/`\n                          )}\n                        >\n                          Paymob\n                        </button> */}\n                        {/* <Link to='http://127.0.0.1:8000/order/api/payment/${orderId}/'>Paymob</Link> */}\n                        <a\n                          href={`http://127.0.0.1:8000/order/api/payment/${orderId}/`}\n                        >\n                          paymob\n                        </a>\n                      </Col>\n                    </Row>\n                  ) : (\n                    <p>{orderDeliver.payment_method} </p>\n                  )}\n                  {/* <p>Method: {order.payment_method}</p> */}\n\n                  {order.is_paid ? (\n                    <Message variant=\"success\">\n                      Paid at {order.paid_at.substring(0, 10)}\n                    </Message>\n                  ) : (\n                    <Message variant=\"warning\">Not Paid</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message variant=\"info\">Your order Is Empty</Message>\n                  ) : (\n                    <ListGroup variant=\"flush\">\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={4}>Product Name</Col>\n                            <Col className=\"justify-contnet-center\" md={2}>\n                              QTY\n                            </Col>\n                            <Col className=\"justify-contnet-center\" md={2}>\n                              Unit Price\n                            </Col>\n                            <Col className=\"justify-contnet-center\" md={2}>\n                              Price\n                            </Col>\n                          </Row>\n                          <br></br>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col md={3}>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={2}>{item.quantity}</Col>\n                            <Col md={2}>{item.price} L.E </Col>\n                            <Col md={2}>\n                              {(item.quantity * item.price).toFixed(2)} L.E\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card className=\" shadow rounded-sm\">\n              <ListGroup variant=\"secondary\">\n                <ListGroup.Item>\n                  <h2>Total</h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Sub-Total:</Col>\n                  <Col>{order.itemsPrice} L.E</Col>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Shipping:</Col>\n                  <Col>{order.shipping_price} L.E</Col>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Col>Total:</Col>\n                  <Col>{order.total_price} L.E</Col>\n                </ListGroup.Item>\n              </ListGroup>\n              {userInfo && order.is_paid && order.is_delivered && (\n                <ListGroup.Item>\n                  <Link\n                    variant=\"dark\"\n                    className=\"btn btn-block text-success btn_color\"\n                    to=\"/createreturn\"\n                  >\n                    File Return Request{\" \"}\n                  </Link>\n                </ListGroup.Item>\n              )}\n              {userInfo && userInfo.isAdmin && !order.is_paid && (\n                <ListGroup.Item>\n                  <Button\n                    variant=\"dark\"\n                    type=\"button\"\n                    className=\"btn btn-block text-success btn_color\"\n                    onClick={payHandler}\n                  >\n                    Mark As Paid\n                  </Button>\n                </ListGroup.Item>\n              )}\n              {userInfo && userInfo.isAdmin && !order.is_delivered && (\n                <ListGroup.Item>\n                  <Button\n                    variant=\"dark\"\n                    type=\"button\"\n                    className=\"btn btn-block btn_color\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default OrderPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/OrderListPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/PaymentPage.jsx",["336","337","338"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../../components/FormContainer\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../../actions/cartActions\";\nimport axios from \"axios\";\n\nfunction PaymentPage({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <Container>\n      <CheckoutSteps step1 step2 step3 />\n      <Row className=\"mt-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <Form onSubmit={submitHandler}>\n            <Form.Group>\n              <h1 className=\" text-succes mt-1 p-1 text-center \">\n                Select Payment Method\n              </h1>\n              <hr></hr>\n              <Col>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Cash on Delievery\"\n                  id=\"cod\" // cod is cash on delievery\n                  name=\"paymentMethod\"\n                  value=\"Cash on Delievery\"\n                  onChange={(event) => {\n                    setPaymentMethod(event.target.value);\n                  }}\n                ></Form.Check>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Paymob\"\n                  id=\"paymob\"\n                  value=\"paymob\"\n                  name=\"paymentMethod\"\n                  onChange={(event) => {\n                    setPaymentMethod(event.target.value);\n                  }}\n                ></Form.Check>\n              </Col>\n            </Form.Group>\n\n            <br></br>\n            <Button\n              type=\"submit\"\n              variant=\"dark\"\n              className=\"w-100 text-success btn_color\"\n            >\n              Continue\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default PaymentPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/OrderPages/MyOrdersPage.jsx",["339","340"],"import { listMyOrders } from \"../../actions/orderActions\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\n\nfunction MyOrdersPage({ history }) {\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || userInfo._id !== user._id) {\n        dispatch(listMyOrders());\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  return (\n    <div className=\"py-5\">\n      <Row md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n                <th>order details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.created_at.substring(0, 10)}</td>\n                  <td>{order.total_price} L.E</td>\n                  <td>\n                    {order.is_paid ? (\n                      order.paid_at.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.is_delivered ? (\n                      order.delivered_at.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant=\"light\" className=\" btn-sm \">\n                        {\" \"}\n                        Details{\" \"}\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default MyOrdersPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/BrandDetailsPage.jsx",["341"],"import React, { useEffect } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getBrandDetails,\n  getProductByBrand,\n} from \"../../actions/productActions\";\nimport Product from \"../../components/Product\";\nfunction BrandDetailsPage({ match, history }) {\n  const dispatch = useDispatch();\n\n  const brandDetails = useSelector((state) => state.brandDetails);\n  const { brand } = brandDetails;\n\n  const brandProducts = useSelector((state) => state.brandProducts);\n  const { product } = brandProducts;\n\n  useEffect(() => {\n    dispatch(getBrandDetails(match.params.id));\n    dispatch(getProductByBrand(match.params.id));\n  }, [dispatch, match]);\n\n  if (!brand) return null;\n  if (!product) return null;\n  console.log(product, \"pppppppppppppppp\");\n  return (\n    <div style={{ marginTop: \"100px\" }}>\n      <div style={{ textAlign: \"center\", alignItems: \"center\" }}>\n        <img\n          style={{\n            width: \"50%\",\n            height: \"50%\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n          }}\n          src={brand.img}\n          alt={brand.name}\n        />\n      </div>\n      <hr />\n      <div style={{ textAlign: \"center\" }}>\n        <p\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"Hind Guntur Semi-bold 600\",\n            fontSize: \"7em\",\n          }}\n        >\n          See More Products From {brand.name}\n        </p>\n      </div>\n      <hr />\n      <Row>\n        {product.map((product) => (\n          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n            <Product product={product} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n\nexport default BrandDetailsPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/BrandPages/AddBrandPage.jsx",["342","343"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addBrandFunction } from \"../../actions/productActions\";\nimport axios from \"axios\";\n\nfunction AddBrandPage({ location, history }) {\n  const [name, setName] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [img, setImg] = useState();\n\n  const dispatch = useDispatch();\n\n  const brandCreate = useSelector((state) => state.brandCreate);\n  const { success: successCreate } = brandCreate;\n\n  if (successCreate) {\n    dispatch({ type: \"BRAND_ADD_RESET\" });\n    history.push(\"/admin/brands\");\n  }\n\n  const uploadFileHandler = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"img\", file);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/product/api/createbrand/\",\n        formData,\n        config\n      );\n\n      setImg(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(addBrandFunction(name));\n  };\n  console.log(img, \"iiiiiiiiiiiiiii\");\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col lg={5} md={6} sm={12} className=\"p-3 m-auto shadow rounded-lg\">\n          <h3 className=\" text-success mt-1 p-1 text-center \">Add Brand</h3>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Brand Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Brand Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                disabled\n                placeholder=\"Enter image\"\n                value={img}\n                onChange={(event) => setImg(event.target.value)}\n              ></Form.Control>\n              <br></br>\n              <Form.File\n                id=\"image-file\"\n                custom\n                label=\"Choose Image\"\n                onChange={uploadFileHandler}\n              ></Form.File>\n            </Form.Group>\n            <Button\n              type=\"submit\"\n              variant=\"dark\"\n              className=\"w-100 text-success btn_color\"\n            >\n              Add Brand\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AddBrandPage;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/pages/AdminPages/AdminPanalPage/AdminPanalPage.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Message.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/FormContainer.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/userActions.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/orderActions.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/ProductCarousel.jsx",["344"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\nimport Slider from \"react-slick\";\nimport Product from \"./Product\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nfunction ProductCarousel() {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { error, loading, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n  var settings = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    autoplay: true,\n    speed: 1000,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    initialSlide: 0,\n\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Slider {...settings}>\n      {products.map((product) => (\n        <Product product={product} />\n      ))}\n    </Slider>\n  );\n}\n\nexport default ProductCarousel;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/LatestProductsCarousel.jsx",["345","346","347"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listLatestProducts } from \"../actions/productActions\";\nimport Slider from \"react-slick\";\nimport Product from \"./Product\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction LatestProductsCarousel() {\n  const dispatch = useDispatch();\n\n  const latestProducts = useSelector((state) => state.latestProducts);\n  const { error, loading, products } = latestProducts;\n\n  useEffect(() => {\n    dispatch(listLatestProducts());\n  }, [dispatch]);\n  var settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 1000,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Slider {...settings}>\n      {products.map((product) => (\n        <Product product={product} />\n      ))}\n    </Slider>\n  );\n}\n\nexport default LatestProductsCarousel;\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Loader.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/productActions.jsx",["348"],"import axios from \"axios\";\n// Product Actions:\nexport const listProducts =\n  (name = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: \"PRODUCT_LIST_REQUEST\" });\n\n      const { data } = await axios.get(`/product/api/products/${name}`);\n\n      dispatch({ type: \"PRODUCT_LIST_SUCCESS\", payload: data });\n    } catch (error) {\n      dispatch({\n        type: \"PRODUCT_LIST_FAIL\",\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: \"PRODUCT_TOP_REQUEST\" });\n\n    const { data } = await axios.get(`/product/api/products/top/`);\n\n    dispatch({\n      type: \"PRODUCT_TOP_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_TOP_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const listLatestProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: \"LATEST_PRODUCTS_REQUEST\" });\n\n    const { data } = await axios.get(`/product/api/products/latest/`);\n\n    dispatch({\n      type: \"LATEST_PRODUCTS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LATEST_PRODUCTS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: \"PRODUCT_DETAILS_REQUEST\" });\n\n    const { data } = await axios.get(`/product/api/product/${id}`);\n\n    dispatch({\n      type: \"PRODUCT_DETAILS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_DETAILS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"PRODUCT_DELETE_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(\n      `/product/api/product/delete/${id}/`,\n      config\n    );\n\n    dispatch({\n      type: \"PRODUCT_DELETE_SUCCESS\",\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_DELETE_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct =\n  (\n    name,\n    price,\n    offer,\n    brand,\n    category,\n    subCategory,\n    stock,\n    description,\n    image\n  ) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCT_CREATE_REQUEST\",\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/product/api/products/create/`,\n        {\n          name: name,\n          price: price,\n          brand: brand,\n          offer: offer,\n          category: category,\n          subCategory: subCategory,\n          stock: stock,\n          description: description,\n          image: image,\n        },\n        config\n      );\n      dispatch({\n        type: \"PRODUCT_CREATE_SUCCESS\",\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"PRODUCT_CREATE_FAIL\",\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"PRODUCT_UPDATE_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/product/api/products/update/${product._id}/`,\n      product,\n      config\n    );\n    dispatch({\n      type: \"PRODUCT_UPDATE_SUCCESS\",\n      payload: data,\n    });\n\n    dispatch({\n      type: \"PRODUCT_DETAILS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_UPDATE_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCT_CREATE_REVIEW_REQUEST\",\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/product/api/products/${productId}/reviews/`,\n        review,\n        config\n      );\n      dispatch({\n        type: \"PRODUCT_CREATE_REVIEW_SUCCESS\",\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"PRODUCT_CREATE_REVIEW_FAIL\",\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n// Returns:\n\nexport const listReturns = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"RETURNS_LIST_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/product/api/returns/`, config);\n    dispatch({\n      type: \"RETURNS_LIST_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"RETURNS_LIST_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const listMyReturnsFunction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"LIST_MY_RETURNS_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/product/api/myreturns/`, config);\n    dispatch({\n      type: \"LIST_MY_RETURNS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LIST_MY_RETURNS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const getReturnsDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"RETURNS_DETAILS_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/product/api/returns/${id}/`, config);\n\n    dispatch({\n      type: \"RETURNS_DETAILS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"RETURNS_DETAILS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const issueStatus = (returns) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"ISSUE_STATE_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/product/api/returns/${returns.id}/update/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: \"ISSUE_STATE_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ISSUE_STATE_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const createReturn =\n  (title, productname, issue, ordernumber, phonenumber) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"RETURN_CREATE_REQUEST\",\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/product/api/returns/create/`,\n        {\n          title: title,\n          productname: productname,\n          issue: issue,\n          ordernumber: ordernumber,\n          phonenumber: phonenumber,\n        },\n        config\n      );\n\n      dispatch({\n        type: \"RETURN_CREATE_SUCCESS\",\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"RETURN_CREATE_FAIL\",\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n// ==========================================================\n// Categories\n\nexport const listCategories = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"CATEGORIES_LIST_REQUEST\",\n    });\n\n    const { data } = await axios.get(`/product/api/categories/`);\n    dispatch({\n      type: \"CATEGORIES_LIST_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"CATEGORIES_LIST_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getProductByCategory =\n  (id, name = \"\") =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCT_CATEGORY_LIST_REQUEST\",\n      });\n\n      const { data } = await axios.get(\n        `/product/api/products/category/${id}/${name}`\n      );\n\n      dispatch({\n        type: \"PRODUCT_CATEGORY_LIST_SUCCESS\",\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"PRODUCT_CATEGORY_LIST_FAIL\",\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n// ==========================================================\n// Sub Categories\n\nexport const listSubCategories = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"SUB_CATEGORY_LIST_REQUEST\",\n    });\n\n    const { data } = await axios.get(`/product/api/sub_categories/`);\n    dispatch({\n      type: \"SUB_CATEGORY_LIST_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"SUB_CATEGORY_LIST_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getProductBySubCategory = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"PRODUCT_SUB_CATEGORY_LIST_REQUEST\",\n    });\n\n    const { data } = await axios.get(\n      `/product/api/products/subcategory/${id}/`\n    );\n\n    dispatch({\n      type: \"PRODUCT_SUB_CATEGORY_LIST_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_SUB_CATEGORY_LIST_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n// Brands:\n\nexport const listBrandsFunction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"BRAND_LIST_REQUEST\",\n    });\n\n    const { data } = await axios.get(`/product/api/brands/`);\n    dispatch({\n      type: \"BRAND_LIST_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"BRAND_LIST_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getBrandDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"BRAND_DETAILS_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/product/api/brand/${id}`, config);\n    dispatch({\n      type: \"BRAND_DETAILS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"BRAND_DETAILS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getProductByBrand = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"PRODUCT_BY_BRAND_REQUEST\",\n    });\n\n    const { data } = await axios.get(`/product/api/brand/${id}/products`);\n\n    dispatch({\n      type: \"PRODUCT_BY_BRAND_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PRODUCT_BY_BRAND_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const addBrandFunction = (name) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"BRAND_ADD_REQUEST\",\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/product/api/createbrand/`,\n      {\n        name: name,\n      },\n      config\n    );\n\n    dispatch({\n      type: \"BRAND_ADD_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"BRAND_ADD_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n// offers:\n// /product/api/offers/\n\nexport const listOffers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"OFFERS_REQUEST\",\n    });\n\n    const { data } = await axios.get(`/product/api/offers/`);\n    dispatch({\n      type: \"OFFERS_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"OFFERS_FAIL\",\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CatSlider.jsx",["349"],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Product.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CheckoutSteps.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/actions/cartActions.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/CarouselSlider.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/Rating.jsx",[],"/home/mohamed/Downloads/project/ecommerce_project/FinalProject/frontend/src/components/SearchBox.jsx",["350"],"import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SearchBox() {\n  const [name, setName] = useState(\"\");\n\n  let history = useHistory();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (name) {\n      history.push(`/search?name=${name}`);\n    } else {\n      history.push(history.push(history.location.pathname));\n    }\n  };\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <div className=\"justify-contnet-center text-center my-2 d-flex\">\n        <input\n          className=\"form-control w-80\"\n          type=\"text\"\n          name=\"q\"\n          placeholder=\"search\"\n          onChange={(event) => setName(event.target.value)}\n        />\n        <button className=\"btn btn-outline-primary\">\n          <i className=\"fas fa-search \"></i>\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default SearchBox;\n",{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","severity":1,"message":"356","line":3,"column":34,"nodeType":"357","messageId":"358","endLine":3,"endColumn":45},{"ruleId":"355","severity":1,"message":"359","line":3,"column":47,"nodeType":"357","messageId":"358","endLine":3,"endColumn":48},{"ruleId":"355","severity":1,"message":"360","line":19,"column":9,"nodeType":"357","messageId":"358","endLine":19,"endColumn":21},{"ruleId":"355","severity":1,"message":"361","line":22,"column":9,"nodeType":"357","messageId":"358","endLine":22,"endColumn":21},{"ruleId":"362","severity":1,"message":"363","line":46,"column":6,"nodeType":"364","endLine":46,"endColumn":8,"suggestions":"365"},{"ruleId":"355","severity":1,"message":"366","line":1,"column":27,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"367","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"368","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":14},{"ruleId":"355","severity":1,"message":"369","line":6,"column":8,"nodeType":"357","messageId":"358","endLine":6,"endColumn":15},{"ruleId":"355","severity":1,"message":"370","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":21},{"ruleId":"355","severity":1,"message":"371","line":16,"column":14,"nodeType":"357","messageId":"358","endLine":16,"endColumn":28},{"ruleId":"355","severity":1,"message":"372","line":17,"column":12,"nodeType":"357","messageId":"358","endLine":17,"endColumn":24},{"ruleId":"355","severity":1,"message":"373","line":23,"column":20,"nodeType":"357","messageId":"358","endLine":23,"endColumn":33},{"ruleId":"355","severity":1,"message":"374","line":23,"column":42,"nodeType":"357","messageId":"358","endLine":23,"endColumn":53},{"ruleId":"355","severity":1,"message":"366","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":26},{"ruleId":"355","severity":1,"message":"375","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":23},{"ruleId":"355","severity":1,"message":"376","line":4,"column":3,"nodeType":"357","messageId":"358","endLine":4,"endColumn":8},{"ruleId":"355","severity":1,"message":"377","line":5,"column":3,"nodeType":"357","messageId":"358","endLine":5,"endColumn":9},{"ruleId":"355","severity":1,"message":"378","line":10,"column":3,"nodeType":"357","messageId":"358","endLine":10,"endColumn":16},{"ruleId":"355","severity":1,"message":"379","line":12,"column":23,"nodeType":"357","messageId":"358","endLine":12,"endColumn":34},{"ruleId":"355","severity":1,"message":"368","line":13,"column":8,"nodeType":"357","messageId":"358","endLine":13,"endColumn":14},{"ruleId":"355","severity":1,"message":"369","line":14,"column":8,"nodeType":"357","messageId":"358","endLine":14,"endColumn":15},{"ruleId":"355","severity":1,"message":"380","line":15,"column":10,"nodeType":"357","messageId":"358","endLine":15,"endColumn":24},{"ruleId":"355","severity":1,"message":"367","line":17,"column":10,"nodeType":"357","messageId":"358","endLine":17,"endColumn":14},{"ruleId":"355","severity":1,"message":"381","line":20,"column":9,"nodeType":"357","messageId":"358","endLine":20,"endColumn":17},{"ruleId":"355","severity":1,"message":"382","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":25},{"ruleId":"355","severity":1,"message":"367","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":14},{"ruleId":"355","severity":1,"message":"383","line":5,"column":10,"nodeType":"357","messageId":"358","endLine":5,"endColumn":18},{"ruleId":"355","severity":1,"message":"369","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":15},{"ruleId":"355","severity":1,"message":"368","line":8,"column":8,"nodeType":"357","messageId":"358","endLine":8,"endColumn":14},{"ruleId":"355","severity":1,"message":"384","line":14,"column":11,"nodeType":"357","messageId":"358","endLine":14,"endColumn":18},{"ruleId":"355","severity":1,"message":"385","line":14,"column":20,"nodeType":"357","messageId":"358","endLine":14,"endColumn":25},{"ruleId":"355","severity":1,"message":"382","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":25},{"ruleId":"355","severity":1,"message":"377","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":16},{"ruleId":"355","severity":1,"message":"386","line":2,"column":23,"nodeType":"357","messageId":"358","endLine":2,"endColumn":26},{"ruleId":"355","severity":1,"message":"376","line":2,"column":28,"nodeType":"357","messageId":"358","endLine":2,"endColumn":33},{"ruleId":"355","severity":1,"message":"375","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":23},{"ruleId":"355","severity":1,"message":"387","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":13},{"ruleId":"355","severity":1,"message":"386","line":3,"column":15,"nodeType":"357","messageId":"358","endLine":3,"endColumn":18},{"ruleId":"355","severity":1,"message":"388","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":15},{"ruleId":"355","severity":1,"message":"368","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":14},{"ruleId":"355","severity":1,"message":"369","line":6,"column":8,"nodeType":"357","messageId":"358","endLine":6,"endColumn":15},{"ruleId":"355","severity":1,"message":"385","line":16,"column":11,"nodeType":"357","messageId":"358","endLine":16,"endColumn":16},{"ruleId":"355","severity":1,"message":"384","line":16,"column":18,"nodeType":"357","messageId":"358","endLine":16,"endColumn":25},{"ruleId":"355","severity":1,"message":"389","line":16,"column":27,"nodeType":"357","messageId":"358","endLine":16,"endColumn":35},{"ruleId":"355","severity":1,"message":"370","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":23},{"ruleId":"355","severity":1,"message":"375","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":23},{"ruleId":"355","severity":1,"message":"386","line":5,"column":29,"nodeType":"357","messageId":"358","endLine":5,"endColumn":32},{"ruleId":"355","severity":1,"message":"390","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"377","line":2,"column":16,"nodeType":"357","messageId":"358","endLine":2,"endColumn":22},{"ruleId":"355","severity":1,"message":"367","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":42,"column":6,"nodeType":"364","endLine":42,"endColumn":44,"suggestions":"391"},{"ruleId":"355","severity":1,"message":"382","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":25},{"ruleId":"355","severity":1,"message":"370","line":8,"column":8,"nodeType":"357","messageId":"358","endLine":8,"endColumn":21},{"ruleId":"355","severity":1,"message":"392","line":2,"column":16,"nodeType":"357","messageId":"358","endLine":2,"endColumn":26},{"ruleId":"355","severity":1,"message":"393","line":20,"column":14,"nodeType":"357","messageId":"358","endLine":20,"endColumn":34},{"ruleId":"355","severity":1,"message":"394","line":21,"column":12,"nodeType":"357","messageId":"358","endLine":21,"endColumn":30},{"ruleId":"395","severity":1,"message":"396","line":47,"column":39,"nodeType":"397","messageId":"398","endLine":47,"endColumn":41},{"ruleId":"355","severity":1,"message":"366","line":1,"column":27,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"370","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":21},{"ruleId":"355","severity":1,"message":"384","line":16,"column":11,"nodeType":"357","messageId":"358","endLine":16,"endColumn":18},{"ruleId":"355","severity":1,"message":"385","line":16,"column":20,"nodeType":"357","messageId":"358","endLine":16,"endColumn":25},{"ruleId":"355","severity":1,"message":"382","line":1,"column":17,"nodeType":"357","messageId":"358","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"399","line":38,"column":6,"nodeType":"364","endLine":38,"endColumn":24,"suggestions":"400"},{"ruleId":"355","severity":1,"message":"401","line":12,"column":8,"nodeType":"357","messageId":"358","endLine":12,"endColumn":13},{"ruleId":"355","severity":1,"message":"402","line":21,"column":20,"nodeType":"357","messageId":"358","endLine":21,"endColumn":30},{"ruleId":"355","severity":1,"message":"403","line":24,"column":20,"nodeType":"357","messageId":"358","endLine":24,"endColumn":34},{"ruleId":"355","severity":1,"message":"404","line":35,"column":18,"nodeType":"357","messageId":"358","endLine":35,"endColumn":27},{"ruleId":"355","severity":1,"message":"366","line":1,"column":27,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"370","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":21},{"ruleId":"355","severity":1,"message":"401","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":13},{"ruleId":"355","severity":1,"message":"382","line":2,"column":17,"nodeType":"357","messageId":"358","endLine":2,"endColumn":25},{"ruleId":"355","severity":1,"message":"386","line":3,"column":23,"nodeType":"357","messageId":"358","endLine":3,"endColumn":26},{"ruleId":"355","severity":1,"message":"377","line":2,"column":20,"nodeType":"357","messageId":"358","endLine":2,"endColumn":26},{"ruleId":"355","severity":1,"message":"366","line":1,"column":27,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"405","line":10,"column":10,"nodeType":"357","messageId":"358","endLine":10,"endColumn":19},{"ruleId":"355","severity":1,"message":"367","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"367","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"406","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":18},{"ruleId":"355","severity":1,"message":"407","line":4,"column":20,"nodeType":"357","messageId":"358","endLine":4,"endColumn":25},{"ruleId":"355","severity":1,"message":"408","line":101,"column":13,"nodeType":"357","messageId":"358","endLine":101,"endColumn":17},{"ruleId":"355","severity":1,"message":"375","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":23},{"ruleId":"355","severity":1,"message":"367","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'L' is defined but never used.","'showDropdown' is assigned a value but never used.","'hideDropdown' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["411"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'FormContainer' is defined but never used.","'loadingReturns' is assigned a value but never used.","'errorReturns' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'ListGroupItem' is defined but never used.","'useSelector' is defined but never used.","'listCategories' is defined but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'payOrder' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Product' is defined but never used.","'products' is assigned a value but never used.","'Form' is defined but never used.",["412"],"'useHistory' is defined but never used.","'subcategoriesLoading' is assigned a value but never used.","'subcategoriesError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["413"],"'axios' is defined but never used.","'loadingPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'setPaymob' is assigned a value but never used.","'uploading' is assigned a value but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},"Update the dependencies array to be: [dispatch]",{"range":"420","text":"421"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"422","text":"423"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"424","text":"425"},[1475,1477],"[dispatch]",[1335,1373],"[user, userId, successUpdate, history, dispatch]",[1174,1192],"[success, history, order._id, dispatch]"]